@page "{id:int}"
@model buildone.Pages.Assets.DetailsModel
@{
    ViewData["Title"] = "Asset Details";
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <div>
        <h1 class="h3 mb-1">@Model.Asset.Name</h1>
        <p class="text-muted mb-0">Asset Tag: <strong>@Model.Asset.AssetTag</strong></p>
    </div>
    <div>
        <a asp-page="./Edit" asp-route-id="@Model.Asset.Id" class="btn btn-primary me-2">
            <i class="bi bi-pencil"></i> Edit Asset
        </a>
        <a asp-page="./Index" class="btn btn-outline-secondary">
            <i class="bi bi-arrow-left"></i> Back to Assets
        </a>
    </div>
</div>

<!-- Status Banner -->
<div class="row mb-4">
    <div class="col-12">
        @{
            var statusClass = Model.Asset.Status switch
            {
                buildone.Data.Enums.AssetStatus.Active => "success",
                buildone.Data.Enums.AssetStatus.InStock => "info",
                buildone.Data.Enums.AssetStatus.InMaintenance => "warning",
                buildone.Data.Enums.AssetStatus.Retired => "secondary",
                _ => "light"
            };
            var statusIcon = Model.Asset.Status switch
            {
                buildone.Data.Enums.AssetStatus.Active => "check-circle",
                buildone.Data.Enums.AssetStatus.InStock => "box",
                buildone.Data.Enums.AssetStatus.InMaintenance => "tools",
                buildone.Data.Enums.AssetStatus.Retired => "x-circle",
                _ => "question-circle"
            };
        }
        <div class="alert alert-@statusClass" role="alert">
            <div class="d-flex align-items-center justify-content-between">
                <div>
                    <i class="bi bi-@statusIcon me-2"></i>
                    <strong>Status: @Model.Asset.Status.ToString()</strong>
                    @if (Model.Asset.AssignedTo != null)
                    {
                        <span class="ms-3">
                            <i class="bi bi-person-badge me-1"></i>
                            Assigned to: <strong>@Model.Asset.AssignedTo.FirstName @Model.Asset.AssignedTo.LastName</strong>
                        </span>
                    }
                    @if (Model.Asset.Department != null)
                    {
                        <span class="ms-3">
                            <i class="bi bi-building me-1"></i>
                            Department: <strong>@Model.Asset.Department.Name</strong>
                        </span>
                    }
                </div>
                <div>
                    @if (Model.Asset.Status == buildone.Data.Enums.AssetStatus.InMaintenance)
                    {
                        <span class="badge bg-warning">Maintenance Required</span>
                    }
                    else if (Model.Asset.WarrantyExpiry.HasValue && Model.Asset.WarrantyExpiry.Value < DateTime.Now)
                    {
                        <span class="badge bg-danger">Warranty Expired</span>
                    }
                    else if (Model.Asset.WarrantyExpiry.HasValue && Model.Asset.WarrantyExpiry.Value < DateTime.Now.AddDays(30))
                    {
                        <span class="badge bg-warning">Warranty Expiring Soon</span>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <!-- Main Content -->
    <div class="col-xl-8">
        <!-- Basic Information Card -->
        <div class="card mb-4">
            <div class="card-header">
                <h5 class="card-title mb-0">
                    <i class="bi bi-info-circle me-2"></i>Basic Information
                </h5>
            </div>
            <div class="card-body">
                <div class="row g-3">
                    <div class="col-md-6">
                        <strong>Asset Name:</strong>
                        <p class="mb-0">@Model.Asset.Name</p>
                    </div>
                    <div class="col-md-6">
                        <strong>Asset Tag:</strong>
                        <p class="mb-0">
                            <code>@Model.Asset.AssetTag</code>
                            <button class="btn btn-sm btn-outline-secondary ms-2" onclick="copyToClipboard('@Model.Asset.AssetTag')" title="Copy to clipboard">
                                <i class="bi bi-clipboard"></i>
                            </button>
                        </p>
                    </div>
                    <div class="col-md-6">
                        <strong>Asset Type:</strong>
                        <p class="mb-0">
                            <span class="badge bg-primary">@Model.Asset.AssetType</span>
                        </p>
                    </div>
                    <div class="col-md-6">
                        <strong>Serial Number:</strong>
                        <p class="mb-0">
                            @if (!string.IsNullOrEmpty(Model.Asset.SerialNumber))
                            {
                                <code>@Model.Asset.SerialNumber</code>
                                <button class="btn btn-sm btn-outline-secondary ms-2" onclick="copyToClipboard('@Model.Asset.SerialNumber')" title="Copy to clipboard">
                                    <i class="bi bi-clipboard"></i>
                                </button>
                            }
                            else
                            {
                                <span class="text-muted">Not specified</span>
                            }
                        </p>
                    </div>
                    @if (!string.IsNullOrEmpty(Model.Asset.Description))
                    {
                        <div class="col-12">
                            <strong>Description:</strong>
                            <p class="mb-0">@Model.Asset.Description</p>
                        </div>
                    }
                </div>
            </div>
        </div>

        <!-- Technical Details Card -->
        <div class="card mb-4">
            <div class="card-header">
                <h5 class="card-title mb-0">
                    <i class="bi bi-gear me-2"></i>Technical Details
                </h5>
            </div>
            <div class="card-body">
                <div class="row g-3">
                    <div class="col-md-6">
                        <strong>Manufacturer:</strong>
                        <p class="mb-0">@(Model.Asset.Manufacturer ?? "Not specified")</p>
                    </div>
                    <div class="col-md-6">
                        <strong>Model:</strong>
                        <p class="mb-0">@(Model.Asset.Model ?? "Not specified")</p>
                    </div>
                    @if (!string.IsNullOrEmpty(Model.Asset.OperatingSystem))
                    {
                        <div class="col-md-6">
                            <strong>Operating System:</strong>
                            <p class="mb-0">@Model.Asset.OperatingSystem</p>
                        </div>
                    }
                    @if (!string.IsNullOrEmpty(Model.Asset.Location))
                    {
                        <div class="col-md-6">
                            <strong>Location:</strong>
                            <p class="mb-0">
                                <i class="bi bi-geo-alt me-1"></i>@Model.Asset.Location
                            </p>
                        </div>
                    }
                    @if (!string.IsNullOrEmpty(Model.Asset.Specifications))
                    {
                        <div class="col-12">
                            <strong>Specifications:</strong>
                            <p class="mb-0">@Model.Asset.Specifications</p>
                        </div>
                    }
                </div>
            </div>
        </div>

        <!-- Financial Information Card -->
        @if (Model.Asset.PurchasePrice.HasValue || Model.Asset.PurchaseDate.HasValue || Model.Asset.WarrantyExpiry.HasValue)
        {
            <div class="card mb-4">
                <div class="card-header">
                    <h5 class="card-title mb-0">
                        <i class="bi bi-currency-dollar me-2"></i>Financial Information
                    </h5>
                </div>
                <div class="card-body">
                    <div class="row g-3">
                        @if (Model.Asset.PurchasePrice.HasValue)
                        {
                            <div class="col-md-6">
                                <strong>Purchase Price:</strong>
                                <p class="mb-0 h5 text-success">@Model.Asset.PurchasePrice.Value.ToString("C")</p>
                            </div>
                        }
                        @if (Model.Asset.PurchaseDate.HasValue)
                        {
                            <div class="col-md-6">
                                <strong>Purchase Date:</strong>
                                <p class="mb-0">@Model.Asset.PurchaseDate.Value.ToString("MMM dd, yyyy")</p>
                            </div>
                        }
                        @if (Model.Asset.WarrantyExpiry.HasValue)
                        {
                            <div class="col-md-6">
                                <strong>Warranty Expiry:</strong>
                                <p class="mb-0">
                                    @Model.Asset.WarrantyExpiry.Value.ToString("MMM dd, yyyy")
                                    @{
                                        var isExpired = Model.Asset.WarrantyExpiry.Value < DateTime.Now;
                                        var daysRemaining = (Model.Asset.WarrantyExpiry.Value - DateTime.Now).Days;
                                    }
                                    @if (isExpired)
                                    {
                                        <span class="badge bg-danger ms-2">Expired</span>
                                    }
                                    else if (daysRemaining <= 30)
                                    {
                                        <span class="badge bg-warning ms-2">@daysRemaining days left</span>
                                    }
                                    else
                                    {
                                        <span class="badge bg-success ms-2">Valid</span>
                                    }
                                </p>
                            </div>
                        }
                        @if (Model.Asset.DepreciationRate.HasValue)
                        {
                            <div class="col-md-6">
                                <strong>Depreciation Rate:</strong>
                                <p class="mb-0">@Model.Asset.DepreciationRate.Value%</p>
                            </div>
                        }
                        @if (!string.IsNullOrEmpty(Model.Asset.Vendor))
                        {
                            <div class="col-md-6">
                                <strong>Vendor:</strong>
                                <p class="mb-0">@Model.Asset.Vendor</p>
                            </div>
                        }
                        @if (!string.IsNullOrEmpty(Model.Asset.PurchaseOrderNumber))
                        {
                            <div class="col-md-6">
                                <strong>Purchase Order:</strong>
                                <p class="mb-0">
                                    <code>@Model.Asset.PurchaseOrderNumber</code>
                                </p>
                            </div>
                        }
                    </div>
                </div>
            </div>
        }

        <!-- Additional Information Card -->
        @if (!string.IsNullOrEmpty(Model.Asset.Notes))
        {
            <div class="card mb-4">
                <div class="card-header">
                    <h5 class="card-title mb-0">
                        <i class="bi bi-journal-text me-2"></i>Additional Notes
                    </h5>
                </div>
                <div class="card-body">
                    <p class="mb-0">@Model.Asset.Notes</p>
                </div>
            </div>
        }

        <!-- Audit Information Card -->
        <div class="card mb-4">
            <div class="card-header">
                <h5 class="card-title mb-0">
                    <i class="bi bi-clock-history me-2"></i>Audit Information
                </h5>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-md-6">
                        <strong>Created:</strong>
                        <p class="mb-0 text-muted">@Model.Asset.CreatedAt.ToString("MMM dd, yyyy 'at' HH:mm")</p>
                    </div>
                    <div class="col-md-6">
                        <strong>Last Updated:</strong>
                        <p class="mb-0 text-muted">@Model.Asset.UpdatedAt.ToString("MMM dd, yyyy 'at' HH:mm")</p>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Sidebar -->
    <div class="col-xl-4">
        <!-- Quick Actions Card -->
        <div class="card mb-4">
            <div class="card-header">
                <h6 class="card-title mb-0">
                    <i class="bi bi-lightning me-2"></i>Quick Actions
                </h6>
            </div>
            <div class="card-body">
                <div class="d-grid gap-2">
                    <a asp-page="./Edit" asp-route-id="@Model.Asset.Id" class="btn btn-primary">
                        <i class="bi bi-pencil me-2"></i>Edit Asset
                    </a>
                    
                    @if (Model.Asset.Status != buildone.Data.Enums.AssetStatus.Active && Model.Asset.AssignedToId == null)
                    {
                        <button type="button" class="btn btn-success" data-bs-toggle="modal" data-bs-target="#assignModal">
                            <i class="bi bi-person-plus me-2"></i>Assign to Employee
                        </button>
                    }
                    
                    @if (Model.Asset.AssignedToId != null)
                    {
                        <form method="post" asp-page-handler="Unassign" style="display: inline;">
                            <input type="hidden" asp-for="Asset.Id" />
                            <button type="submit" class="btn btn-warning w-100" onclick="return confirm('Are you sure you want to unassign this asset?')">
                                <i class="bi bi-person-dash me-2"></i>Unassign Asset
                            </button>
                        </form>
                    }
                    
                    @if (Model.Asset.Status == buildone.Data.Enums.AssetStatus.Active)
                    {
                        <form method="post" asp-page-handler="SetMaintenance" style="display: inline;">
                            <input type="hidden" asp-for="Asset.Id" />
                            <button type="submit" class="btn btn-warning w-100">
                                <i class="bi bi-tools me-2"></i>Mark for Maintenance
                            </button>
                        </form>
                    }
                    
                    @if (Model.Asset.Status == buildone.Data.Enums.AssetStatus.InMaintenance)
                    {
                        <form method="post" asp-page-handler="SetActive" style="display: inline;">
                            <input type="hidden" asp-for="Asset.Id" />
                            <button type="submit" class="btn btn-success w-100">
                                <i class="bi bi-check-circle me-2"></i>Mark as Active
                            </button>
                        </form>
                    }
                    
                    <hr>
                    
                    <a asp-page="./Delete" asp-route-id="@Model.Asset.Id" class="btn btn-outline-danger">
                        <i class="bi bi-trash me-2"></i>Delete Asset
                    </a>
                </div>
            </div>
        </div>

        <!-- Assignment Information Card -->
        @if (Model.Asset.AssignedTo != null || Model.Asset.Department != null)
        {
            <div class="card mb-4">
                <div class="card-header">
                    <h6 class="card-title mb-0">
                        <i class="bi bi-person-badge me-2"></i>Assignment Information
                    </h6>
                </div>
                <div class="card-body">
                    @if (Model.Asset.AssignedTo != null)
                    {
                        <div class="mb-3">
                            <strong>Assigned To:</strong>
                            <p class="mb-0">
                                <i class="bi bi-person me-1"></i>
                                @Model.Asset.AssignedTo.FirstName @Model.Asset.AssignedTo.LastName
                            </p>
                            @if (!string.IsNullOrEmpty(Model.Asset.AssignedTo.Email))
                            {
                                <small class="text-muted">
                                    <i class="bi bi-envelope me-1"></i>
                                    <a href="mailto:@Model.Asset.AssignedTo.Email">@Model.Asset.AssignedTo.Email</a>
                                </small>
                            }
                        </div>
                    }
                    @if (Model.Asset.Department != null)
                    {
                        <div>
                            <strong>Department:</strong>
                            <p class="mb-0">
                                <i class="bi bi-building me-1"></i>
                                @Model.Asset.Department.Name
                            </p>
                        </div>
                    }
                </div>
            </div>
        }

        <!-- System Information Card -->
        <div class="card">
            <div class="card-header">
                <h6 class="card-title mb-0">
                    <i class="bi bi-info-circle me-2"></i>System Information
                </h6>
            </div>
            <div class="card-body">
                <div class="small text-muted">
                    <div class="mb-2">
                        <strong>Asset ID:</strong> #@Model.Asset.Id
                    </div>
                    <div class="mb-2">
                        <strong>Record Created:</strong> @Model.Asset.CreatedAt.ToString("MMM dd, yyyy")
                    </div>
                    <div>
                        <strong>Last Modified:</strong> @Model.Asset.UpdatedAt.ToString("MMM dd, yyyy")
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Assignment Modal -->
<div class="modal fade" id="assignModal" tabindex="-1" aria-labelledby="assignModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form method="post" asp-page-handler="Assign">
                <div class="modal-header">
                    <h5 class="modal-title" id="assignModalLabel">Assign Asset</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <input type="hidden" asp-for="Asset.Id" />
                    <div class="mb-3">
                        <label for="employeeSelect" class="form-label">Select Employee</label>
                        <select name="employeeId" id="employeeSelect" class="form-select" required>
                            <option value="">Choose an employee...</option>
                            @foreach (var employee in Model.Employees)
                            {
                                <option value="@employee.Id">@employee.FullName (@employee.Department?.Name)</option>
                            }
                        </select>
                    </div>
                    <div class="mb-3">
                        <label for="departmentSelect" class="form-label">Department (Optional)</label>
                        <select name="departmentId" id="departmentSelect" class="form-select">
                            <option value="">No department</option>
                            @foreach (var department in Model.Departments)
                            {
                                <option value="@department.Id">@department.Name</option>
                            }
                        </select>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">Assign Asset</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function copyToClipboard(text) {
            navigator.clipboard.writeText(text).then(function() {
                // Show success feedback
                const toast = document.createElement('div');
                toast.className = 'toast align-items-center text-white bg-success border-0 position-fixed top-0 end-0 m-3';
                toast.style.zIndex = '9999';
                toast.innerHTML = `
                    <div class="d-flex">
                        <div class="toast-body">
                            Copied to clipboard!
                        </div>
                        <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast"></button>
                    </div>
                `;
                document.body.appendChild(toast);
                const bsToast = new bootstrap.Toast(toast);
                bsToast.show();
                setTimeout(() => {
                    document.body.removeChild(toast);
                }, 3000);
            }, function(err) {
                console.error('Could not copy text: ', err);
            });
        }

        // Auto-select department when employee is selected in assignment modal
        document.getElementById('employeeSelect').addEventListener('change', function() {
            if (this.value) {
                const selectedOption = this.options[this.selectedIndex];
                const text = selectedOption.text;
                const departmentMatch = text.match(/\(([^)]+)\)$/);
                if (departmentMatch && departmentMatch[1] !== 'No Department') {
                    const departmentSelect = document.getElementById('departmentSelect');
                    for (let option of departmentSelect.options) {
                        if (option.text === departmentMatch[1]) {
                            departmentSelect.value = option.value;
                            break;
                        }
                    }
                }
            }
        });
    </script>
}