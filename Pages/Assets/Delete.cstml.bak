@page "{id:int}"
@model buildone.Pages.Assets.DeleteModel
@{
    ViewData["Title"] = "Delete Asset";
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <div>
        <h1 class="h3 mb-1 text-danger">
            <i class="bi bi-exclamation-triangle me-2"></i>Delete Asset
        </h1>
        <p class="text-muted mb-0">This action cannot be undone</p>
    </div>
    <div>
        <a asp-page="./Details" asp-route-id="@Model.Asset.Id" class="btn btn-outline-secondary me-2">
            <i class="bi bi-eye"></i> View Details
        </a>
        <a asp-page="./Index" class="btn btn-outline-secondary">
            <i class="bi bi-arrow-left"></i> Back to Assets
        </a>
    </div>
</div>

<!-- Warning Alert -->
<div class="alert alert-danger" role="alert">
    <div class="d-flex align-items-center">
        <i class="bi bi-exclamation-triangle-fill me-3 fs-4"></i>
        <div>
            <h5 class="alert-heading mb-1">Permanent Deletion Warning</h5>
            <p class="mb-0">
                You are about to permanently delete this asset. This action cannot be undone and will remove all associated data.
            </p>
        </div>
    </div>
</div>

<!-- Asset Information to be Deleted -->
<div class="row">
    <div class="col-xl-8">
        <div class="card mb-4">
            <div class="card-header bg-light">
                <h5 class="card-title mb-0">
                    <i class="bi bi-info-circle me-2"></i>Asset to be Deleted
                </h5>
            </div>
            <div class="card-body">
                <div class="row g-3">
                    <div class="col-md-6">
                        <strong>Asset Name:</strong>
                        <p class="mb-0">@Model.Asset.Name</p>
                    </div>
                    <div class="col-md-6">
                        <strong>Asset Tag:</strong>
                        <p class="mb-0">
                            <code>@Model.Asset.AssetTag</code>
                        </p>
                    </div>
                    <div class="col-md-6">
                        <strong>Asset Type:</strong>
                        <p class="mb-0">
                            <span class="badge bg-primary">@Model.Asset.AssetType</span>
                        </p>
                    </div>
                    <div class="col-md-6">
                        <strong>Current Status:</strong>
                        <p class="mb-0">
                            @{
                                var statusClass = Model.Asset.Status switch
                                {
                                    buildone.Data.Enums.AssetStatus.Active => "success",
                                    buildone.Data.Enums.AssetStatus.InStock => "info",
                                    buildone.Data.Enums.AssetStatus.InMaintenance => "warning",
                                    buildone.Data.Enums.AssetStatus.Retired => "secondary",
                                    _ => "light"
                                };
                            }
                            <span class="badge bg-@statusClass">@Model.Asset.Status</span>
                        </p>
                    </div>
                    @if (!string.IsNullOrEmpty(Model.Asset.SerialNumber))
                    {
                        <div class="col-md-6">
                            <strong>Serial Number:</strong>
                            <p class="mb-0">
                                <code>@Model.Asset.SerialNumber</code>
                            </p>
                        </div>
                    }
                    @if (!string.IsNullOrEmpty(Model.Asset.Location))
                    {
                        <div class="col-md-6">
                            <strong>Location:</strong>
                            <p class="mb-0">
                                <i class="bi bi-geo-alt me-1"></i>@Model.Asset.Location
                            </p>
                        </div>
                    }
                    @if (Model.Asset.AssignedTo != null)
                    {
                        <div class="col-md-6">
                            <strong>Assigned To:</strong>
                            <p class="mb-0">
                                <i class="bi bi-person me-1"></i>
                                @Model.Asset.AssignedTo.FirstName @Model.Asset.AssignedTo.LastName
                            </p>
                        </div>
                    }
                    @if (Model.Asset.Department != null)
                    {
                        <div class="col-md-6">
                            <strong>Department:</strong>
                            <p class="mb-0">
                                <i class="bi bi-building me-1"></i>
                                @Model.Asset.Department.Name
                            </p>
                        </div>
                    }
                    @if (Model.Asset.PurchasePrice.HasValue)
                    {
                        <div class="col-md-6">
                            <strong>Purchase Price:</strong>
                            <p class="mb-0 text-success">@Model.Asset.PurchasePrice.Value.ToString("C")</p>
                        </div>
                    }
                    @if (Model.Asset.PurchaseDate.HasValue)
                    {
                        <div class="col-md-6">
                            <strong>Purchase Date:</strong>
                            <p class="mb-0">@Model.Asset.PurchaseDate.Value.ToString("MMM dd, yyyy")</p>
                        </div>
                    }
                    @if (!string.IsNullOrEmpty(Model.Asset.Description))
                    {
                        <div class="col-12">
                            <strong>Description:</strong>
                            <p class="mb-0">@Model.Asset.Description</p>
                        </div>
                    }
                </div>
            </div>
        </div>

        <!-- Consequences Section -->
        <div class="card mb-4">
            <div class="card-header bg-warning">
                <h5 class="card-title mb-0 text-dark">
                    <i class="bi bi-exclamation-triangle me-2"></i>Deletion Consequences
                </h5>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-12">
                        <p class="mb-3">Deleting this asset will result in the following actions:</p>
                        <ul class="list-unstyled">
                            <li class="mb-2">
                                <i class="bi bi-x-circle text-danger me-2"></i>
                                The asset record will be permanently removed from the database
                            </li>
                            <li class="mb-2">
                                <i class="bi bi-x-circle text-danger me-2"></i>
                                All associated financial and audit information will be lost
                            </li>
                            @if (Model.Asset.AssignedTo != null)
                            {
                                <li class="mb-2">
                                    <i class="bi bi-person-dash text-warning me-2"></i>
                                    The asset will be unassigned from <strong>@Model.Asset.AssignedTo.FirstName @Model.Asset.AssignedTo.LastName</strong>
                                </li>
                            }
                            <li class="mb-2">
                                <i class="bi bi-clock-history text-info me-2"></i>
                                Historical tracking and maintenance records will be removed
                            </li>
                            <li class="mb-0">
                                <i class="bi bi-shield-exclamation text-danger me-2"></i>
                                This action cannot be reversed or undone
                            </li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>

        <!-- Confirmation Section -->
        <div class="card mb-4">
            <div class="card-header bg-danger text-white">
                <h5 class="card-title mb-0">
                    <i class="bi bi-shield-exclamation me-2"></i>Confirm Deletion
                </h5>
            </div>
            <div class="card-body">
                <form method="post">
                    <input type="hidden" asp-for="Asset.Id" />
                    
                    <div class="mb-4">
                        <p class="mb-3">
                            To confirm deletion, please type the asset tag <strong class="text-danger">@Model.Asset.AssetTag</strong> in the field below:
                        </p>
                        <div class="row">
                            <div class="col-md-6">
                                <label for="confirmAssetTag" class="form-label">Confirm Asset Tag:</label>
                                <input type="text" 
                                       id="confirmAssetTag" 
                                       name="confirmAssetTag" 
                                       class="form-control" 
                                       placeholder="Enter asset tag to confirm"
                                       autocomplete="off"
                                       required>
                                <div class="form-text">Type: <code>@Model.Asset.AssetTag</code></div>
                            </div>
                        </div>
                    </div>

                    <div class="form-check mb-4">
                        <input class="form-check-input" 
                               type="checkbox" 
                               id="confirmDeletion" 
                               name="confirmDeletion" 
                               required>
                        <label class="form-check-label" for="confirmDeletion">
                            I understand that this action is permanent and cannot be undone
                        </label>
                    </div>

                    <div class="d-flex justify-content-between">
                        <div>
                            <a asp-page="./Details" asp-route-id="@Model.Asset.Id" class="btn btn-outline-secondary me-2">
                                <i class="bi bi-arrow-left me-2"></i>Cancel and View Details
                            </a>
                            <a asp-page="./Index" class="btn btn-outline-secondary">
                                <i class="bi bi-list me-2"></i>Back to Asset List
                            </a>
                        </div>
                        <button type="submit" 
                                class="btn btn-danger" 
                                id="deleteButton" 
                                disabled>
                            <i class="bi bi-trash me-2"></i>Permanently Delete Asset
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!-- Information Sidebar -->
    <div class="col-xl-4">
        <div class="card">
            <div class="card-header">
                <h6 class="card-title mb-0">
                    <i class="bi bi-info-circle me-2"></i>Before You Delete
                </h6>
            </div>
            <div class="card-body">
                <div class="small">
                    <div class="mb-3">
                        <strong>Consider Alternatives:</strong>
                        <ul class="mt-2 ps-3">
                            <li>Mark as retired instead of deleting</li>
                            <li>Transfer to another department</li>
                            <li>Update status to reflect current state</li>
                        </ul>
                    </div>
                    
                    <div class="mb-3">
                        <strong>Data Backup:</strong>
                        <p class="text-muted mb-0 mt-2">
                            Ensure you have exported any important data before proceeding with deletion.
                        </p>
                    </div>
                    
                    <div class="mb-3">
                        <strong>Audit Trail:</strong>
                        <p class="text-muted mb-0 mt-2">
                            Asset was created on @Model.Asset.CreatedAt.ToString("MMM dd, yyyy") and last updated on @Model.Asset.UpdatedAt.ToString("MMM dd, yyyy").
                        </p>
                    </div>
                    
                    <hr>
                    
                    <div class="text-center">
                        <a asp-page="./Edit" asp-route-id="@Model.Asset.Id" class="btn btn-outline-primary btn-sm">
                            <i class="bi bi-pencil me-1"></i>Edit Instead
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const confirmAssetTagInput = document.getElementById('confirmAssetTag');
            const confirmCheckbox = document.getElementById('confirmDeletion');
            const deleteButton = document.getElementById('deleteButton');
            const expectedAssetTag = '@Model.Asset.AssetTag';

            function checkFormValidity() {
                const assetTagMatches = confirmAssetTagInput.value.trim() === expectedAssetTag;
                const checkboxChecked = confirmCheckbox.checked;
                
                deleteButton.disabled = !(assetTagMatches && checkboxChecked);
                
                // Visual feedback for asset tag input
                if (confirmAssetTagInput.value.trim() === '') {
                    confirmAssetTagInput.classList.remove('is-valid', 'is-invalid');
                } else if (assetTagMatches) {
                    confirmAssetTagInput.classList.remove('is-invalid');
                    confirmAssetTagInput.classList.add('is-valid');
                } else {
                    confirmAssetTagInput.classList.remove('is-valid');
                    confirmAssetTagInput.classList.add('is-invalid');
                }
            }

            confirmAssetTagInput.addEventListener('input', checkFormValidity);
            confirmCheckbox.addEventListener('change', checkFormValidity);

            // Prevent form submission if validation fails
            document.querySelector('form').addEventListener('submit', function(e) {
                if (deleteButton.disabled) {
                    e.preventDefault();
                    alert('Please complete all confirmation requirements before deleting the asset.');
                    return false;
                }
                
                // Final confirmation
                if (!confirm(`Are you absolutely sure you want to permanently delete the asset "${expectedAssetTag}"? This action cannot be undone.`)) {
                    e.preventDefault();
                    return false;
                }
                
                return true;
            });

            // Warn about leaving page
            let formSubmitted = false;
            document.querySelector('form').addEventListener('submit', function() {
                formSubmitted = true;
            });

            window.addEventListener('beforeunload', function(e) {
                if (!formSubmitted && (confirmAssetTagInput.value.trim() !== '' || confirmCheckbox.checked)) {
                    e.preventDefault();
                    e.returnValue = '';
                }
            });
        });
    </script>
}