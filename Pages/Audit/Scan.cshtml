@page
@model buildone.Pages.Audit.ScanModel
@{
    ViewData["Title"] = "Audit Scanner";
}

<div class="container-fluid mt-4">
    <div class="row mb-3">
        <div class="col">
            <h1><i class="fas fa-qrcode"></i> Asset Audit Scanner</h1>
            <p class="text-muted">Session: <strong>@Model.AuditSessionId</strong> | Audited By: <strong>@Model.AuditedBy</strong></p>
        </div>
        <div class="col-auto">
            <button type="button" class="btn btn-secondary me-2" onclick="viewDeletedAuditsInSession()">
                <i class="fas fa-trash-restore"></i> Deleted
            </button>
            <button id="refreshAssetsBtn" class="btn btn-info me-2">
                <i class="fas fa-sync"></i> Refresh Assets
            </button>
            <a asp-page="Index" class="btn btn-success">
                <i class="fas fa-check"></i> Complete Audit
            </a>
        </div>
    </div>

    <div class="row">
        <!-- Scanner Column -->
        <div class="col-md-4">
            <div class="card mb-3">
                <div class="card-header bg-primary text-white">
                    <h5 class="mb-0"><i class="fas fa-camera"></i> Scanner</h5>
                </div>
                <div class="card-body">
                    <div id="reader" style="width: 100%; min-height: 300px;"></div>
                    <div class="mt-3 d-grid gap-2">
                        <button id="startScanBtn" class="btn btn-primary">
                            <i class="fas fa-play"></i> Start Scanner
                        </button>
                        <button id="stopScanBtn" class="btn btn-danger" style="display:none;">
                            <i class="fas fa-stop"></i> Stop Scanner
                        </button>
                    </div>
                </div>
            </div>

            <!-- Manual Entry -->
            <div class="card">
                <div class="card-header bg-secondary text-white">
                    <h6 class="mb-0"><i class="fas fa-keyboard"></i> Manual Entry</h6>
                </div>
                <div class="card-body">
                    <p class="small text-muted">If scanner fails or asset tag is damaged, enter manually:</p>
                    <div class="input-group">
                        <input type="text" class="form-control" id="manualAssetTag" placeholder="Enter Asset Tag">
                        <button class="btn btn-secondary" id="manualSearchBtn">
                            <i class="fas fa-search"></i> Search
                        </button>
                    </div>
                </div>
            </div>

            <!-- Session Summary -->
            <div class="card mt-3">
                <div class="card-header">
                    <h6 class="mb-0"><i class="fas fa-chart-bar"></i> Session Summary</h6>
                </div>
                <div class="card-body">
                    <div class="row text-center g-2">
                        <div class="col-6">
                            <div class="border rounded p-2">
                                <h4 id="scannedCount" class="text-primary mb-0">0</h4>
                                <small>Scanned</small>
                            </div>
                        </div>
                        <div class="col-6">
                            <div class="border rounded p-2">
                                <h4 id="newCount" class="text-success mb-0">0</h4>
                                <small>New</small>
                            </div>
                        </div>
                        <div class="col-6">
                            <div class="border rounded p-2">
                                <h4 id="changesCount" class="text-warning mb-0">0</h4>
                                <small>Changes</small>
                            </div>
                        </div>
                        <div class="col-6">
                            <div class="border rounded p-2">
                                <h4 id="remainingCount" class="text-info mb-0">-</h4>
                                <small>Remaining</small>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Asset Info Column -->
        <div class="col-md-4">
            <div class="card mb-3">
                <div class="card-header bg-success text-white">
                    <h5 class="mb-0"><i class="fas fa-info-circle"></i> Asset Information</h5>
                </div>
                <div class="card-body">
                    <div id="assetInfo" style="display: none;">
                        <div id="alertContainer"></div>
                        
                        <form id="auditForm">
                            <input type="hidden" id="assetId" name="assetId">
                            <input type="hidden" id="auditSessionId" name="auditSessionId" value="@Model.AuditSessionId">
                            <input type="hidden" id="auditedBy" name="auditedBy" value="@Model.AuditedBy">

                            <div class="mb-3">
                                <label class="form-label">Asset Tag</label>
                                <input type="text" class="form-control" id="assetTag" name="assetTag" required readonly>
                            </div>

                            <div class="mb-3">
                                <label class="form-label">Serial Number</label>
                                <input type="text" class="form-control" id="serialNumber" name="serialNumber">
                            </div>

                            <div class="row">
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label class="form-label">Brand</label>
                                        <input type="text" class="form-control" id="brand" name="brand">
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label class="form-label">Model</label>
                                        <input type="text" class="form-control" id="model" name="model">
                                    </div>
                                </div>
                            </div>

                            <div class="mb-3">
                                <label class="form-label">Asset Type</label>
                                <select class="form-select" id="assetType" name="assetType" required>
                                    <option value="">Select Type</option>
                                    <option value="Desktop">Desktop</option>
                                    <option value="Laptop">Laptop</option>
                                    <option value="Monitor">Monitor</option>
                                    <option value="Printer">Printer</option>
                                    <option value="Server">Server</option>
                                    <option value="Network Equipment">Network Equipment</option>
                                    <option value="Other">Other</option>
                                </select>
                            </div>

                            <div class="mb-3">
                                <label class="form-label">Status *</label>
                                <select class="form-select" id="status" name="status" required>
                                    <option value="InStock">In Stock</option>
                                    <option value="InUse">In Use</option>
                                    <option value="Maintenance">Under Maintenance</option>
                                    <option value="Faulty">Faulty</option>
                                    <option value="Retired">Retired</option>
                                    <option value="Disposed">Disposed</option>
                                </select>
                                <div id="statusChange" class="text-warning mt-1" style="display:none;"></div>
                            </div>

                            <div class="mb-3">
                                <label class="form-label">Location</label>
                                <input type="text" class="form-control" id="location" name="location" placeholder="e.g., Building A, Floor 2, Room 201">
                                <div id="locationChange" class="text-warning mt-1" style="display:none;"></div>
                            </div>

                            <div class="mb-3">
                                <label class="form-label">Notes</label>
                                <textarea class="form-control" id="notes" name="notes" rows="2"></textarea>
                            </div>

                            <div class="d-grid">
                                <button type="submit" class="btn btn-success btn-lg">
                                    <i class="fas fa-save"></i> Save Audit Record
                                </button>
                            </div>
                        </form>
                    </div>

                    <div id="noAssetMessage" class="text-center text-muted py-5">
                        <i class="fas fa-qrcode fa-3x mb-3"></i>
                        <p>Scan QR/Barcode or enter asset tag manually</p>
                    </div>
                </div>
            </div>
        </div>

        <!-- Assets List Column -->
        <div class="col-md-4">
            <div class="card">
                <div class="card-header">
                    <h5 class="mb-0"><i class="fas fa-list"></i> Assets to Audit</h5>
                </div>
                <div class="card-body p-0">
                    <div class="p-3 border-bottom">
                        <input type="text" class="form-control form-control-sm" id="assetSearchBox" placeholder="Search assets...">
                    </div>
                    <div id="assetsList" style="max-height: 600px; overflow-y: auto;">
                        <div class="text-center p-4">
                            <div class="spinner-border text-primary" role="status">
                                <span class="visually-hidden">Loading...</span>
                            </div>
                            <p class="mt-2 text-muted">Loading assets...</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Scanned Assets History Table -->
    <div class="row mt-4">
        <div class="col-12">
            <div class="card">
                <div class="card-header bg-info text-white d-flex justify-content-between align-items-center">
                    <h5 class="mb-0"><i class="fas fa-history"></i> Scanned Assets History</h5>
                    <button id="refreshHistoryBtn" class="btn btn-sm btn-light">
                        <i class="fas fa-sync"></i> Refresh
                    </button>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table table-hover table-sm" id="scannedHistoryTable">
                            <thead class="table-light">
                                <tr>
                                    <th>Time</th>
                                    <th>Asset Tag</th>
                                    <th>Type</th>
                                    <th>Status</th>
                                    <th>Location</th>
                                    <th>Notes</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody id="scannedHistoryBody">
                                <tr>
                                    <td colspan="7" class="text-center text-muted">No assets scanned yet</td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Edit Audit Modal -->
<div class="modal fade" id="editAuditModal" tabindex="-1" aria-labelledby="editAuditModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editAuditModalLabel">Edit Scanned Asset</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <input type="hidden" id="editAuditId">
                <div class="mb-3">
                    <label for="editAssetTag" class="form-label">Asset Tag</label>
                    <input type="text" class="form-control" id="editAssetTag" readonly>
                </div>
                <div class="mb-3">
                    <label for="editStatus" class="form-label">Status</label>
                    <select class="form-select" id="editStatus">
                        <option value="Active">Active</option>
                        <option value="InStorage">In Storage</option>
                        <option value="UnderMaintenance">Under Maintenance</option>
                        <option value="Retired">Retired</option>
                        <option value="Disposed">Disposed</option>
                    </select>
                </div>
                <div class="mb-3">
                    <label for="editLocation" class="form-label">Location</label>
                    <input type="text" class="form-control" id="editLocation">
                </div>
                <div class="mb-3">
                    <label for="editNotes" class="form-label">Notes</label>
                    <textarea class="form-control" id="editNotes" rows="3"></textarea>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" id="saveEditBtn">Save Changes</button>
            </div>
        </div>
    </div>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteAuditModal" tabindex="-1" aria-labelledby="deleteAuditModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-danger text-white">
                <h5 class="modal-title" id="deleteAuditModalLabel">Delete Scanned Asset</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <input type="hidden" id="deleteAuditId">
                <p>Are you sure you want to delete this audit record?</p>
                <p><strong>Asset Tag:</strong> <span id="deleteAssetTag"></span></p>
                <div class="mb-3">
                    <label for="deletionReason" class="form-label">Reason for deletion (optional)</label>
                    <textarea class="form-control" id="deletionReason" rows="2" placeholder="Enter reason..."></textarea>
                </div>
                <div class="alert alert-warning">
                    <i class="fas fa-info-circle"></i> This record will be moved to delete history for audit trail purposes.
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger" id="confirmDeleteBtn">Delete</button>
            </div>
        </div>
    </div>
</div>

<!-- View Deleted Audits Modal (Session Specific) -->
<div class="modal fade" id="deletedAuditsSessionModal" tabindex="-1" aria-labelledby="deletedAuditsSessionModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-xl">
        <div class="modal-content">
            <div class="modal-header bg-secondary text-white">
                <h5 class="modal-title" id="deletedAuditsSessionModalLabel">
                    <i class="fas fa-trash-restore"></i> Deleted Audits (This Session)
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="alert alert-info">
                    <i class="fas fa-info-circle"></i> Showing deleted audits for session: <strong>@Model.AuditSessionId</strong>
                </div>
                <div class="table-responsive">
                    <table class="table table-hover table-sm">
                        <thead class="table-light">
                            <tr>
                                <th>Deleted Time</th>
                                <th>Asset Tag</th>
                                <th>Asset Type</th>
                                <th>Status</th>
                                <th>Location</th>
                                <th>Deleted By</th>
                                <th>Reason</th>
                            </tr>
                        </thead>
                        <tbody id="deletedAuditsSessionBody">
                            <tr>
                                <td colspan="7" class="text-center">
                                    <div class="spinner-border text-primary" role="status">
                                        <span class="visually-hidden">Loading...</span>
                                    </div>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://unpkg.com/html5-qrcode@2.3.8/html5-qrcode.min.js"></script>
    <script>
        let html5QrCode;
        let sessionStats = { scanned: 0, new: 0, changes: 0 };
        let allAssets = [];
        let auditedAssets = new Set();

        // Load assets on page load
        document.addEventListener('DOMContentLoaded', function() {
            loadAssets();
            loadScannedHistory();
        });

        // Load all assets
        function loadAssets() {
            fetch(`/api/assetaudit/assets?sessionId=@Model.AuditSessionId`)
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        allAssets = data.data;
                        displayAssets(allAssets);
                        updateRemainingCount();
                    }
                })
                .catch(error => {
                    console.error('Error loading assets:', error);
                    document.getElementById('assetsList').innerHTML = '<div class="alert alert-danger m-3">Error loading assets</div>';
                });
        }

        // Display assets list
        function displayAssets(assets) {
            const assetsList = document.getElementById('assetsList');
            if (assets.length === 0) {
                assetsList.innerHTML = '<div class="text-center p-4 text-muted">No assets found</div>';
                return;
            }

            let html = '<div class="list-group list-group-flush">';
            assets.forEach(asset => {
                const statusClass = asset.auditedInCurrentSession ? 'list-group-item-success' : '';
                const statusIcon = asset.auditedInCurrentSession ? '<i class="fas fa-check-circle text-success"></i>' : '<i class="far fa-circle text-muted"></i>';
                const lastAuditInfo = asset.lastAuditDate ? `<small class="text-muted">Last audited: ${new Date(asset.lastAuditDate).toLocaleDateString()}</small>` : '';
                
                html += `
                    <div class="list-group-item list-group-item-action ${statusClass}" data-asset-id="${asset.id}" onclick="selectAssetFromList(${asset.id})">
                        <div class="d-flex w-100 justify-content-between align-items-start">
                            <div class="flex-grow-1">
                                <h6 class="mb-1">${statusIcon} ${asset.assetTag}</h6>
                                <p class="mb-1 small">${asset.type || 'Unknown Type'} - ${asset.status}</p>
                                <p class="mb-0 small text-muted">${asset.location || 'No location'}</p>
                                ${lastAuditInfo}
                            </div>
                        </div>
                    </div>
                `;
            });
            html += '</div>';
            assetsList.innerHTML = html;
        }

        // Search assets
        document.getElementById('assetSearchBox').addEventListener('input', function(e) {
            const searchTerm = e.target.value.toLowerCase();
            const filtered = allAssets.filter(a => 
                a.assetTag.toLowerCase().includes(searchTerm) ||
                (a.type && a.type.toLowerCase().includes(searchTerm)) ||
                (a.location && a.location.toLowerCase().includes(searchTerm))
            );
            displayAssets(filtered);
        });

        // Select asset from list
        function selectAssetFromList(assetId) {
            const asset = allAssets.find(a => a.id === assetId);
            if (asset) {
                processAssetData({
                    assetId: asset.id,
                    assetTag: asset.assetTag,
                    serialNumber: asset.serialNumber,
                    brand: asset.brand,
                    model: asset.model,
                    assetType: asset.type,
                    status: asset.status,
                    location: asset.location,
                    isNew: false,
                    statusChanged: false,
                    locationChanged: false
                });
            }
        }

        // Manual search
        document.getElementById('manualSearchBtn').addEventListener('click', function() {
            const assetTag = document.getElementById('manualAssetTag').value.trim();
            if (assetTag) {
                processScannedAsset(assetTag);
                document.getElementById('manualAssetTag').value = '';
            }
        });

        // Enter key support for manual entry
        document.getElementById('manualAssetTag').addEventListener('keypress', function(e) {
            if (e.key === 'Enter') {
                document.getElementById('manualSearchBtn').click();
            }
        });

        // Refresh assets
        document.getElementById('refreshAssetsBtn').addEventListener('click', function() {
            loadAssets();
        });

        // Initialize scanner
        document.getElementById('startScanBtn').addEventListener('click', function() {
            html5QrCode = new Html5Qrcode("reader");
            
            html5QrCode.start(
                { facingMode: "environment" },
                { fps: 10, qrbox: { width: 250, height: 250 } },
                onScanSuccess,
                onScanError
            ).then(() => {
                document.getElementById('startScanBtn').style.display = 'none';
                document.getElementById('stopScanBtn').style.display = 'inline-block';
            }).catch(err => {
                alert('Error starting scanner: ' + err);
            });
        });

        document.getElementById('stopScanBtn').addEventListener('click', function() {
            if (html5QrCode) {
                html5QrCode.stop().then(() => {
                    document.getElementById('startScanBtn').style.display = 'inline-block';
                    document.getElementById('stopScanBtn').style.display = 'none';
                });
            }
        });

        function onScanSuccess(decodedText) {
            if (html5QrCode) {
                html5QrCode.pause();
            }
            processScannedAsset(decodedText);
        }

        function onScanError(errorMessage) {
            // Ignore scan errors
        }

        function processScannedAsset(scannedCode) {
            document.getElementById('noAssetMessage').style.display = 'none';
            document.getElementById('assetInfo').style.display = 'block';
            document.getElementById('alertContainer').innerHTML = '<div class="alert alert-info">Processing...</div>';

            fetch('/api/assetaudit/process-scan', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({
                    scannedCode: scannedCode,
                    auditSessionId: '@Model.AuditSessionId',
                    auditedBy: '@Model.AuditedBy'
                })
            })
            .then(response => response.json())
            .then(data => {
                processAssetData(data);
                updateSessionStats(data);
                loadScannedHistory(); // Refresh scanned history
            })
            .catch(error => {
                document.getElementById('alertContainer').innerHTML = '<div class="alert alert-danger">Error: ' + error + '</div>';
                if (html5QrCode) {
                    setTimeout(() => html5QrCode.resume(), 2000);
                }
            });
        }

        function processAssetData(data) {
            document.getElementById('alertContainer').innerHTML = '';

            // Check if it's a duplicate (not successful)
            if (!data.success) {
                // Show duplicate warning popup
                const alertDiv = document.createElement('div');
                alertDiv.className = 'alert alert-warning alert-dismissible fade show position-fixed top-0 start-50 translate-middle-x mt-3';
                alertDiv.style.zIndex = '9999';
                alertDiv.style.minWidth = '400px';
                alertDiv.innerHTML = `
                    <i class="fas fa-exclamation-triangle"></i> <strong>Already Audited!</strong>
                    <p class="mb-0">${data.message}</p>
                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                `;
                document.body.appendChild(alertDiv);
                setTimeout(() => alertDiv.remove(), 5000);

                // Resume scanner
                if (html5QrCode) {
                    setTimeout(() => html5QrCode.resume(), 2000);
                }
                return;
            }

            // Check if message contains duplicate warning (even if success is true)
            if (data.message && data.message.includes('DUPLICATE')) {
                // Show duplicate warning popup
                const alertDiv = document.createElement('div');
                alertDiv.className = 'alert alert-warning alert-dismissible fade show position-fixed top-0 start-50 translate-middle-x mt-3';
                alertDiv.style.zIndex = '9999';
                alertDiv.style.minWidth = '400px';
                alertDiv.innerHTML = `
                    <i class="fas fa-exclamation-triangle"></i> <strong>Already Audited!</strong>
                    <p class="mb-0">${data.message}</p>
                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                `;
                document.body.appendChild(alertDiv);
                setTimeout(() => alertDiv.remove(), 5000);
            }

            if (data.isNew) {
                document.getElementById('alertContainer').innerHTML += '<div class="alert alert-success"><i class="fas fa-plus-circle"></i> <strong>New Asset</strong></div>';
            } else {
                document.getElementById('alertContainer').innerHTML += '<div class="alert alert-primary"><i class="fas fa-check-circle"></i> <strong>Existing Asset</strong></div>';
            }

            if (data.statusChanged) {
                document.getElementById('statusChange').style.display = 'block';
                document.getElementById('statusChange').innerHTML = '<i class="fas fa-exclamation-triangle"></i> Status changed';
            } else {
                document.getElementById('statusChange').style.display = 'none';
            }

            if (data.locationChanged) {
                document.getElementById('locationChange').style.display = 'block';
                document.getElementById('locationChange').innerHTML = '<i class="fas fa-exclamation-triangle"></i> Location changed';
            } else {
                document.getElementById('locationChange').style.display = 'none';
            }

            document.getElementById('assetId').value = data.assetId || '';
            document.getElementById('assetTag').value = data.assetTag || '';
            document.getElementById('serialNumber').value = data.serialNumber || '';
            document.getElementById('brand').value = data.brand || '';
            document.getElementById('model').value = data.model || '';
            document.getElementById('assetType').value = data.assetType || '';
            document.getElementById('status').value = data.status || 'InStock';
            document.getElementById('location').value = data.location || '';
            document.getElementById('notes').value = '';
        }

        function updateSessionStats(data) {
            sessionStats.scanned++;
            if (data.isNew) sessionStats.new++;
            if (data.statusChanged || data.locationChanged) sessionStats.changes++;

            document.getElementById('scannedCount').textContent = sessionStats.scanned;
            document.getElementById('newCount').textContent = sessionStats.new++;
            document.getElementById('changesCount').textContent = sessionStats.changes;
            updateRemainingCount();
        }

        function updateRemainingCount() {
            const remaining = allAssets.length - sessionStats.scanned;
            document.getElementById('remainingCount').textContent = remaining >= 0 ? remaining : '-';
        }

        // Handle form submission
        document.getElementById('auditForm').addEventListener('submit', function(e) {
            e.preventDefault();

            const formData = {
                assetId: document.getElementById('assetId').value || null,
                assetTag: document.getElementById('assetTag').value,
                serialNumber: document.getElementById('serialNumber').value,
                brand: document.getElementById('brand').value,
                model: document.getElementById('model').value,
                assetType: document.getElementById('assetType').value,
                status: document.getElementById('status').value,
                location: document.getElementById('location').value,
                auditSessionId: document.getElementById('auditSessionId').value,
                auditedBy: document.getElementById('auditedBy').value,
                notes: document.getElementById('notes').value
            };

            fetch('/api/assetaudit', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(formData)
            })
            .then(response => response.json())
            .then(data => {
                document.getElementById('alertContainer').innerHTML = '<div class="alert alert-success"><i class="fas fa-check"></i> Saved successfully!</div>';
                
                // Mark asset as audited in the list
                const assetId = formData.assetId;
                if (assetId) {
                    const assetElement = document.querySelector(`[data-asset-id="${assetId}"]`);
                    if (assetElement) {
                        assetElement.classList.add('list-group-item-success');
                        assetElement.querySelector('i').className = 'fas fa-check-circle text-success';
                    }
                    auditedAssets.add(parseInt(assetId));
                }

                // Refresh assets list and history
                loadAssets();
                loadScannedHistory();
                
                setTimeout(() => {
                    document.getElementById('noAssetMessage').style.display = 'block';
                    document.getElementById('assetInfo').style.display = 'none';
                    document.getElementById('statusChange').style.display = 'none';
                    document.getElementById('locationChange').style.display = 'none';
                    
                    if (html5QrCode) {
                        html5QrCode.resume();
                    }
                }, 2000);
            })
            .catch(error => {
                document.getElementById('alertContainer').innerHTML = '<div class="alert alert-danger">Error saving: ' + error + '</div>';
            });
        });

        // Load scanned assets history
        function loadScannedHistory() {
            // Add timestamp to prevent caching
            const timestamp = new Date().getTime();
            fetch(`/api/assetaudit/session/@Model.AuditSessionId?t=${timestamp}`)
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Network response was not ok');
                    }
                    return response.json();
                })
                .then(data => {
                    const tbody = document.getElementById('scannedHistoryBody');
                    if (!data || data.length === 0) {
                        tbody.innerHTML = '<tr><td colspan="7" class="text-center text-muted">No assets scanned yet</td></tr>';
                        return;
                    }

                    tbody.innerHTML = data.map(audit => `
                        <tr id="audit-row-${audit.id}">
                            <td>${new Date(audit.auditDate).toLocaleTimeString()}</td>
                            <td><strong>${audit.assetTag}</strong></td>
                            <td>${audit.assetType || '-'}</td>
                            <td><span class="badge bg-${getStatusBadgeColor(audit.status)}">${audit.status}</span></td>
                            <td>${audit.location || '-'}</td>
                            <td>${audit.notes || '-'}</td>
                            <td>
                                <button class="btn btn-sm btn-primary me-1" onclick="editAudit(${audit.id}, '${audit.assetTag}', '${audit.status}', '${audit.location || ''}', '${audit.notes || ''}')">
                                    <i class="fas fa-edit"></i>
                                </button>
                                <button class="btn btn-sm btn-danger" onclick="confirmDeleteAudit(${audit.id}, '${audit.assetTag}')">
                                    <i class="fas fa-trash"></i>
                                </button>
                            </td>
                        </tr>
                    `).join('');
                })
                .catch(error => {
                    console.error('Error loading scanned history:', error);
                    const tbody = document.getElementById('scannedHistoryBody');
                    tbody.innerHTML = '<tr><td colspan="7" class="text-center text-danger">Error loading history</td></tr>';
                });
        }

        // Get badge color for status
        function getStatusBadgeColor(status) {
            const statusColors = {
                'Active': 'success',
                'InStorage': 'info',
                'UnderMaintenance': 'warning',
                'Retired': 'secondary',
                'Disposed': 'dark'
            };
            return statusColors[status] || 'secondary';
        }

        // Edit audit record
        function editAudit(auditId, assetTag, status, location, notes) {
            document.getElementById('editAuditId').value = auditId;
            document.getElementById('editAssetTag').value = assetTag;
            document.getElementById('editStatus').value = status;
            document.getElementById('editLocation').value = location;
            document.getElementById('editNotes').value = notes;

            const modal = new bootstrap.Modal(document.getElementById('editAuditModal'));
            modal.show();
        }

        // Save edited audit
        document.getElementById('saveEditBtn').addEventListener('click', function() {
            const auditId = document.getElementById('editAuditId').value;
            const data = {
                status: document.getElementById('editStatus').value,
                location: document.getElementById('editLocation').value,
                notes: document.getElementById('editNotes').value
            };

            fetch(`/api/assetaudit/update-audit/${auditId}`, {
                method: 'PUT',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(data)
            })
            .then(response => response.json())
            .then(result => {
                if (result.success) {
                    bootstrap.Modal.getInstance(document.getElementById('editAuditModal')).hide();
                    loadScannedHistory();
                    loadAssets(); // Refresh assets list as well
                    
                    // Show success message
                    const alertDiv = document.createElement('div');
                    alertDiv.className = 'alert alert-success alert-dismissible fade show position-fixed top-0 start-50 translate-middle-x mt-3';
                    alertDiv.style.zIndex = '9999';
                    alertDiv.innerHTML = `
                        <i class="fas fa-check-circle"></i> Audit record updated successfully
                        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                    `;
                    document.body.appendChild(alertDiv);
                    setTimeout(() => alertDiv.remove(), 3000);
                } else {
                    alert('Error updating audit record');
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('Error updating audit record');
            });
        });

        // Confirm delete audit
        function confirmDeleteAudit(auditId, assetTag) {
            document.getElementById('deleteAuditId').value = auditId;
            document.getElementById('deleteAssetTag').textContent = assetTag;
            document.getElementById('deletionReason').value = '';

            const modal = new bootstrap.Modal(document.getElementById('deleteAuditModal'));
            modal.show();
        }

        // Delete audit record
        document.getElementById('confirmDeleteBtn').addEventListener('click', function() {
            const auditId = document.getElementById('deleteAuditId').value;
            const reason = document.getElementById('deletionReason').value;

            fetch(`/api/assetaudit/delete-audit/${auditId}`, {
                method: 'DELETE',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ deletionReason: reason })
            })
            .then(response => response.json())
            .then(result => {
                if (result.success) {
                    // Close modal
                    bootstrap.Modal.getInstance(document.getElementById('deleteAuditModal')).hide();
                    
                    // Immediately remove the row from table
                    const row = document.getElementById(`audit-row-${auditId}`);
                    if (row) {
                        row.style.transition = 'opacity 0.3s';
                        row.style.opacity = '0';
                        setTimeout(() => {
                            row.remove();
                            // Check if table is now empty
                            const tbody = document.getElementById('scannedHistoryBody');
                            if (tbody.children.length === 0) {
                                tbody.innerHTML = '<tr><td colspan="7" class="text-center text-muted">No assets scanned yet</td></tr>';
                            }
                        }, 300);
                    }
                    
                    // Update session stats
                    sessionStats.scanned = Math.max(0, sessionStats.scanned - 1);
                    document.getElementById('scannedCount').textContent = sessionStats.scanned;
                    updateRemainingCount();
                    
                    // Show success message
                    const alertDiv = document.createElement('div');
                    alertDiv.className = 'alert alert-success alert-dismissible fade show position-fixed top-0 start-50 translate-middle-x mt-3';
                    alertDiv.style.zIndex = '9999';
                    alertDiv.innerHTML = `
                        <i class="fas fa-check-circle"></i> Audit record deleted successfully
                        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                    `;
                    document.body.appendChild(alertDiv);
                    setTimeout(() => alertDiv.remove(), 3000);
                } else {
                    alert('Error deleting audit record');
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('Error deleting audit record');
            });
        });

        // Refresh history button
        document.getElementById('refreshHistoryBtn').addEventListener('click', function() {
            loadScannedHistory();
        });

        // View deleted audits in this session
        function viewDeletedAuditsInSession() {
            const modal = new bootstrap.Modal(document.getElementById('deletedAuditsSessionModal'));
            modal.show();
            
            // Load deleted audits for this session
            const tbody = document.getElementById('deletedAuditsSessionBody');
            tbody.innerHTML = '<tr><td colspan="7" class="text-center"><div class="spinner-border text-primary" role="status"></div></td></tr>';
            
            const timestamp = new Date().getTime();
            fetch(`/api/assetaudit/deleted-history?sessionId=@Model.AuditSessionId&t=${timestamp}`)
                .then(response => response.json())
                .then(data => {
                    if (!data || data.length === 0) {
                        tbody.innerHTML = '<tr><td colspan="7" class="text-center text-muted">No deleted audit records in this session</td></tr>';
                        return;
                    }
                    
                    tbody.innerHTML = data.map(audit => `
                        <tr>
                            <td>${new Date(audit.deletedAt).toLocaleTimeString()}</td>
                            <td><strong>${audit.assetTag}</strong></td>
                            <td>${audit.assetType || '-'}</td>
                            <td><span class="badge bg-secondary">${audit.status}</span></td>
                            <td>${audit.location || '-'}</td>
                            <td>${audit.deletedBy}</td>
                            <td>${audit.deletionReason || '-'}</td>
                        </tr>
                    `).join('');
                })
                .catch(error => {
                    console.error('Error loading deleted audits:', error);
                    tbody.innerHTML = '<tr><td colspan="7" class="text-center text-danger">Error loading deleted audits</td></tr>';
                });
        }
    </script>
}
