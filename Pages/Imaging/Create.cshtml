@page
@model buildone.Pages.Imaging.CreateModel
@{
    ViewData["Title"] = Model.ImagingJob?.JobType == buildone.Data.Enums.JobType.Maintenance ? "Create Maintenance Job" : "Create Imaging Job";
    var isMaintenanceJob = Model.ImagingJob?.JobType == buildone.Data.Enums.JobType.Maintenance;
}

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h2>
                    <i class="fas @(isMaintenanceJob ? "fa-tools text-warning" : "fa-plus-circle text-primary")"></i> 
                    @(isMaintenanceJob ? "Create Maintenance Job" : "Create Imaging Job")
                </h2>
                <a asp-page="./Queue" class="btn btn-secondary">
                    <i class="fas fa-arrow-left"></i> Back to Queue
                </a>
            </div>

            @if (TempData["ErrorMessage"] != null)
            {
                <div class="alert alert-danger alert-dismissible fade show" role="alert">
                    <i class="fas fa-exclamation-triangle"></i> @TempData["ErrorMessage"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                </div>
            }

            <div class="card">
                <div class="card-header @(isMaintenanceJob ? "bg-warning text-dark" : "bg-primary text-white")">
                    <h5 class="mb-0"><i class="fas @(isMaintenanceJob ? "fa-tools" : "fa-desktop")"></i> Job Details</h5>
                </div>
                <div class="card-body">
                    <form method="post" enctype="multipart/form-data">
                        <div asp-validation-summary="ModelOnly" class="text-danger mb-3"></div>
                        
                        <!-- Hidden field for Job Type -->
                        <input type="hidden" asp-for="ImagingJob.JobType" />

                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label asp-for="ImagingJob.AssetId" class="form-label"></label>
                                    <select asp-for="ImagingJob.AssetId" class="form-select" asp-items="@(new SelectList(Model.AvailableAssets, "Id", "AssetTag"))">
                                        <option value="">-- Select Asset --</option>
                                    </select>
                                    <span asp-validation-for="ImagingJob.AssetId" class="text-danger"></span>
                                    @if (!Model.AvailableAssets.Any())
                                    {
                                        <div class="form-text text-warning">
                                            <i class="fas fa-exclamation-triangle"></i> No assets available for @(isMaintenanceJob ? "maintenance" : "imaging"). All assets may have active jobs.
                                        </div>
                                    }
                                </div>

                                <div class="mb-3">
                                    <label asp-for="ImagingJob.TechnicianId" class="form-label"></label>
                                    <select asp-for="ImagingJob.TechnicianId" class="form-select" asp-items="@(new SelectList(Model.Technicians, "Id", "FullName"))">
                                        <option value="">-- Assign Later --</option>
                                    </select>
                                    <span asp-validation-for="ImagingJob.TechnicianId" class="text-danger"></span>
                                    <div class="form-text">Leave blank to assign a technician later</div>
                                </div>

                                @if (!isMaintenanceJob)
                                {
                                    <div class="mb-3">
                                        <label asp-for="ImagingJob.ImagingType" class="form-label"></label>
                                        <select asp-for="ImagingJob.ImagingType" class="form-select" asp-items="Html.GetEnumSelectList<buildone.Data.Enums.ImagingType>()">
                                        </select>
                                        <span asp-validation-for="ImagingJob.ImagingType" class="text-danger"></span>
                                        <div class="form-text">
                                            <small>
                                                <strong>Fresh:</strong> Complete new installation<br>
                                                <strong>Wipe and Load:</strong> Format and reinstall<br>
                                                <strong>Bare Metal:</strong> Hardware-level installation
                                            </small>
                                        </div>
                                    </div>
                                }
                            </div>

                            <div class="col-md-6">
                                @if (!isMaintenanceJob)
                                {
                                    <div class="mb-3">
                                        <label asp-for="ImagingJob.ImageVersion" class="form-label"></label>
                                        <input asp-for="ImagingJob.ImageVersion" class="form-control" placeholder="e.g., Windows11-2024.1">
                                        <span asp-validation-for="ImagingJob.ImageVersion" class="text-danger"></span>
                                        <div class="form-text">Specify the image version to be used</div>
                                    </div>
                                }

                                <div class="mb-3">
                                    <label asp-for="ImagingJob.Priority" class="form-label"></label>
                                    <select asp-for="ImagingJob.Priority" class="form-select" asp-items="Html.GetEnumSelectList<buildone.Data.Enums.JobPriority>()">
                                    </select>
                                    <span asp-validation-for="ImagingJob.Priority" class="text-danger"></span>
                                    <div class="form-text">
                                        <small>
                                            <strong>Urgent:</strong> Critical - handle immediately<br>
                                            <strong>High:</strong> Important - prioritize<br>
                                            <strong>Normal:</strong> Standard priority<br>
                                            <strong>Low:</strong> Can be deferred
                                        </small>
                                    </div>
                                </div>

                                <div class="mb-3">
                                    <label asp-for="ImagingJob.ScheduledAt" class="form-label"></label>
                                    <input asp-for="ImagingJob.ScheduledAt" class="form-control" type="datetime-local">
                                    <span asp-validation-for="ImagingJob.ScheduledAt" class="text-danger"></span>
                                    <div class="form-text">Leave blank for immediate scheduling</div>
                                </div>

                                <div class="mb-3">
                                    <label asp-for="ImagingJob.DueDate" class="form-label"></label>
                                    <input asp-for="ImagingJob.DueDate" class="form-control" type="datetime-local">
                                    <span asp-validation-for="ImagingJob.DueDate" class="text-danger"></span>
                                    <div class="form-text">Optional due date for tracking</div>
                                </div>

                                <div class="mb-3">
                                    <label asp-for="ImagingJob.Notes" class="form-label"></label>
                                    <textarea asp-for="ImagingJob.Notes" class="form-control" rows="4" placeholder="Add any special instructions or notes..."></textarea>
                                    <span asp-validation-for="ImagingJob.Notes" class="text-danger"></span>
                                </div>
                            </div>
                        </div>

                        @if (isMaintenanceJob)
                        {
                            <!-- Maintenance Job: File Attachments Section -->
                            <div class="row mt-3">
                                <div class="col-12">
                                    <div class="card border-warning">
                                        <div class="card-header bg-warning bg-opacity-10">
                                            <h6 class="mb-0">
                                                <i class="fas fa-paperclip me-2"></i>Attachments (Images & Documents)
                                            </h6>
                                            <small class="text-muted">Add photos of the issue, repair documents, or reference materials</small>
                                        </div>
                                        <div class="card-body">
                                            <div class="mb-3">
                                                <label for="maintenanceFiles" class="form-label">
                                                    <i class="fas fa-upload me-1"></i>Upload Files
                                                </label>
                                                <input type="file" 
                                                       class="form-control" 
                                                       id="maintenanceFiles" 
                                                       name="attachmentFiles" 
                                                       multiple 
                                                       accept="image/*,.pdf,.doc,.docx,.xls,.xlsx,.txt">
                                                <div class="form-text">
                                                    <i class="fas fa-info-circle"></i> 
                                                    Supported: Images (JPG, PNG, GIF), Documents (PDF, Word, Excel, TXT). Max 10MB per file.
                                                </div>
                                            </div>
                                            
                                            <!-- File Preview Area -->
                                            <div id="filePreviewArea" class="mt-3" style="display: none;">
                                                <label class="form-label">Selected Files:</label>
                                                <div id="filePreviewList" class="list-group"></div>
                                            </div>

                                            <div class="alert alert-info mt-3 mb-0">
                                                <i class="fas fa-lightbulb me-2"></i>
                                                <strong>Tip:</strong> Include before/after photos, diagnostic reports, or parts documentation for better record keeping.
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }

                        <div class="row mt-4">
                            <div class="col-12">
                                <div class="d-flex justify-content-between">
                                    <a asp-page="./Queue" class="btn btn-secondary">
                                        <i class="fas fa-times"></i> Cancel
                                    </a>
                                    <button type="submit" class="btn btn-primary">
                                        <i class="fas fa-save"></i> Create Job
                                    </button>
                                </div>
                            </div>
                        </div>
                    </form>
                </div>
            </div>

            <!-- Available Assets Info -->
            @if (Model.AvailableAssets.Any())
            {
                <div class="card mt-4">
                    <div class="card-header bg-info text-white">
                        <h6 class="mb-0"><i class="fas fa-info-circle"></i> Available Assets (@Model.AvailableAssets.Count)</h6>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            @foreach (var asset in Model.AvailableAssets.Take(6))
                            {
                                <div class="col-md-4 mb-2">
                                    <div class="d-flex align-items-center">
                                        <i class="fas fa-desktop text-muted me-2"></i>
                                        <div>
                                            <strong>@asset.AssetTag</strong> - @asset.PcId<br>
                                            <small class="text-muted">@asset.Brand @asset.Model</small>
                                        </div>
                                    </div>
                                </div>
                            }
                            @if (Model.AvailableAssets.Count > 6)
                            {
                                <div class="col-12">
                                    <small class="text-muted">... and @(Model.AvailableAssets.Count - 6) more assets</small>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        $(document).ready(function() {
            // Auto-focus on asset selection
            $('#ImagingJob_AssetId').focus();
            
            // Set default datetime to current time + 1 hour if not set
            var scheduledInput = $('#ImagingJob_ScheduledAt');
            if (!scheduledInput.val()) {
                var now = new Date();
                now.setHours(now.getHours() + 1);
                var formattedDate = now.toISOString().slice(0, 16);
                scheduledInput.val(formattedDate);
            }

            // File upload preview for maintenance jobs
            $('#maintenanceFiles').on('change', function(e) {
                const files = e.target.files;
                const previewArea = $('#filePreviewArea');
                const previewList = $('#filePreviewList');
                
                if (files.length > 0) {
                    previewArea.show();
                    previewList.empty();
                    
                    Array.from(files).forEach((file, index) => {
                        const fileSize = (file.size / 1024).toFixed(2); // KB
                        const fileSizeMB = (file.size / (1024 * 1024)).toFixed(2); // MB
                        const sizeText = fileSize > 1024 ? `${fileSizeMB} MB` : `${fileSize} KB`;
                        
                        let icon = 'fa-file';
                        let iconColor = 'text-secondary';
                        
                        if (file.type.startsWith('image/')) {
                            icon = 'fa-file-image';
                            iconColor = 'text-primary';
                        } else if (file.type.includes('pdf')) {
                            icon = 'fa-file-pdf';
                            iconColor = 'text-danger';
                        } else if (file.type.includes('word')) {
                            icon = 'fa-file-word';
                            iconColor = 'text-info';
                        } else if (file.type.includes('excel') || file.type.includes('spreadsheet')) {
                            icon = 'fa-file-excel';
                            iconColor = 'text-success';
                        }
                        
                        const fileItem = `
                            <div class="list-group-item d-flex justify-content-between align-items-center">
                                <div>
                                    <i class="fas ${icon} ${iconColor} me-2"></i>
                                    <strong>${file.name}</strong>
                                    <small class="text-muted ms-2">(${sizeText})</small>
                                </div>
                                <button type="button" class="btn btn-sm btn-outline-danger remove-file" data-index="${index}">
                                    <i class="fas fa-times"></i> Remove
                                </button>
                            </div>
                        `;
                        previewList.append(fileItem);
                    });
                } else {
                    previewArea.hide();
                }
            });

            // Remove file from selection
            $(document).on('click', '.remove-file', function() {
                const input = document.getElementById('maintenanceFiles');
                const dt = new DataTransfer();
                const files = input.files;
                const indexToRemove = parseInt($(this).data('index'));
                
                for (let i = 0; i < files.length; i++) {
                    if (i !== indexToRemove) {
                        dt.items.add(files[i]);
                    }
                }
                
                input.files = dt.files;
                $(input).trigger('change');
            });

            // Form validation for file sizes
            $('form').on('submit', function(e) {
                const files = document.getElementById('maintenanceFiles')?.files;
                if (files && files.length > 0) {
                    const maxSize = 10 * 1024 * 1024; // 10MB
                    let hasOversizedFile = false;
                    
                    Array.from(files).forEach(file => {
                        if (file.size > maxSize) {
                            hasOversizedFile = true;
                            alert(`File "${file.name}" exceeds the 10MB size limit. Please choose a smaller file.`);
                        }
                    });
                    
                    if (hasOversizedFile) {
                        e.preventDefault();
                        return false;
                    }
                }
            });
        });
    </script>
}