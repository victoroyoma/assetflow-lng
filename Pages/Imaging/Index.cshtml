@page
@model buildone.Pages.Imaging.IndexModel
@{
    ViewData["Title"] = "Jobs";
}

<div class="container-fluid py-4">
    <div class="row mb-4">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center">
                <div>
                    <h2 class="mb-1">
                        <i class="fas fa-tasks me-2 text-primary"></i>Jobs Management
                    </h2>
                    <p class="text-muted mb-0">View and manage all imaging and maintenance jobs</p>
                </div>
                <div>
                    <a asp-page="/Imaging/Queue" class="btn btn-primary">
                        <i class="fas fa-clock me-2"></i>Job Queue
                    </a>
                    <a asp-page="/Imaging/Create" asp-route-jobType="Imaging" class="btn btn-success me-1">
                        <i class="fas fa-compact-disc me-2"></i>New Imaging Job
                    </a>
                    <a asp-page="/Imaging/Create" asp-route-jobType="Maintenance" class="btn btn-warning">
                        <i class="fas fa-tools me-2"></i>New Maintenance Job
                    </a>
                </div>
            </div>
        </div>
    </div>

    <!-- Statistics Cards -->
    <div class="row mb-4">
        <div class="col-md-3">
            <div class="card border-0 shadow-sm">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h6 class="text-muted mb-1">Total Jobs</h6>
                            <h3 class="mb-0">@Model.Statistics.TotalJobs</h3>
                        </div>
                        <div class="icon-shape bg-primary text-white rounded-circle">
                            <i class="fas fa-tasks"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card border-0 shadow-sm">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h6 class="text-muted mb-1">In Progress</h6>
                            <h3 class="mb-0">@Model.Statistics.InProgress</h3>
                        </div>
                        <div class="icon-shape bg-info text-white rounded-circle">
                            <i class="fas fa-spinner"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card border-0 shadow-sm">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h6 class="text-muted mb-1">Completed</h6>
                            <h3 class="mb-0">@Model.Statistics.Completed</h3>
                        </div>
                        <div class="icon-shape bg-success text-white rounded-circle">
                            <i class="fas fa-check"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card border-0 shadow-sm">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h6 class="text-muted mb-1">Pending</h6>
                            <h3 class="mb-0">@Model.Statistics.Pending</h3>
                        </div>
                        <div class="icon-shape bg-warning text-white rounded-circle">
                            <i class="fas fa-clock"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Jobs Table -->
    <div class="card border-0 shadow-sm">
        <div class="card-header bg-white border-bottom">
            <div class="row g-3">
                <div class="col-md-4">
                    <form method="get">
                        <div class="input-group">
                            <span class="input-group-text"><i class="fas fa-search"></i></span>
                            <input type="text" 
                                   class="form-control" 
                                   name="SearchTerm" 
                                   value="@Model.SearchTerm" 
                                   placeholder="Search by asset tag, image version...">
                        </div>
                    </form>
                </div>
                <div class="col-md-3">
                    <form method="get">
                        <select class="form-select" name="JobStatusFilter" onchange="this.form.submit()">
                            <option value="">All Statuses</option>
                            @{
                                var jobStatuses = new[] { "Pending", "Scheduled", "InProgress", "Completed", "Failed", "Cancelled" };
                                var jobStatusLabels = new Dictionary<string, string>
                                {
                                    ["Pending"] = "Pending",
                                    ["Scheduled"] = "Scheduled",
                                    ["InProgress"] = "In Progress",
                                    ["Completed"] = "Completed",
                                    ["Failed"] = "Failed",
                                    ["Cancelled"] = "Cancelled"
                                };
                                foreach (var status in jobStatuses)
                                {
                                    <option value="@status" selected="@(Model.JobStatusFilter == status)">@jobStatusLabels[status]</option>
                                }
                            }
                        </select>
                        <input type="hidden" name="SearchTerm" value="@Model.SearchTerm" />
                        <input type="hidden" name="PriorityFilter" value="@Model.PriorityFilter" />
                    </form>
                </div>
                <div class="col-md-3">
                    <form method="get">
                        <select class="form-select" name="PriorityFilter" onchange="this.form.submit()">
                            <option value="">All Priorities</option>
                            @{
                                var priorities = new[] { "Low", "Normal", "High", "Urgent" };
                                foreach (var priority in priorities)
                                {
                                    <option value="@priority" selected="@(Model.PriorityFilter == priority)">@priority</option>
                                }
                            }
                        </select>
                        <input type="hidden" name="SearchTerm" value="@Model.SearchTerm" />
                        <input type="hidden" name="JobStatusFilter" value="@Model.JobStatusFilter" />
                    </form>
                </div>
                <div class="col-md-2">
                    <a asp-page="/Imaging/Index" class="btn btn-outline-secondary w-100">
                        <i class="fas fa-times me-1"></i>Clear
                    </a>
                </div>
            </div>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-hover">
                    <thead>
                        <tr>
                            <th>Job ID</th>
                            <th>Asset</th>
                            <th>Imaging Type</th>
                            <th>Status</th>
                            <th>Priority</th>
                            <th>Technician</th>
                            <th>Scheduled</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model.Jobs.Any())
                        {
                            @foreach (var job in Model.Jobs)
                            {
                                <tr>
                                    <td>#@job.Id</td>
                                    <td>
                                        <strong>@job.Asset.AssetTag</strong><br />
                                        <small class="text-muted">@job.Asset.Brand @job.Asset.Model</small>
                                    </td>
                                    <td>
                                        <span class="badge bg-secondary">@job.ImagingType</span>
                                    </td>
                                    <td>
                                        @{
                                            var statusBadge = job.Status switch
                                            {
                                                buildone.Data.Enums.JobStatus.Completed => "bg-success",
                                                buildone.Data.Enums.JobStatus.InProgress => "bg-info",
                                                buildone.Data.Enums.JobStatus.Failed => "bg-danger",
                                                buildone.Data.Enums.JobStatus.Pending => "bg-warning",
                                                buildone.Data.Enums.JobStatus.Scheduled => "bg-primary",
                                                _ => "bg-secondary"
                                            };
                                        }
                                        <span class="badge @statusBadge">@job.Status</span>
                                    </td>
                                    <td>
                                        @{
                                            var priorityBadge = job.Priority switch
                                            {
                                                buildone.Data.Enums.JobPriority.Urgent => "bg-danger",
                                                buildone.Data.Enums.JobPriority.High => "bg-warning",
                                                buildone.Data.Enums.JobPriority.Normal => "bg-info",
                                                _ => "bg-secondary"
                                            };
                                        }
                                        <span class="badge @priorityBadge">@job.Priority</span>
                                    </td>
                                    <td>@(job.Technician?.FullName ?? "Unassigned")</td>
                                    <td>
                                        @if (job.ScheduledAt.HasValue)
                                        {
                                            @job.ScheduledAt.Value.ToString("MMM dd, yyyy HH:mm")
                                        }
                                        else
                                        {
                                            <span class="text-muted">Not scheduled</span>
                                        }
                                    </td>
                                    <td>
                                        <a asp-page="/Imaging/Details" asp-route-id="@job.Id" class="btn btn-sm btn-outline-primary" title="View Details">
                                            <i class="fas fa-eye"></i>
                                        </a>
                                    </td>
                                </tr>
                            }
                        }
                        else
                        {
                            <tr>
                                <td colspan="8" class="text-center py-4">
                                    <i class="fas fa-inbox fa-3x text-muted mb-3"></i>
                                    <p class="text-muted mb-0">No imaging jobs found.</p>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            <!-- Pagination -->
            @{
                ViewData["PageIndex"] = Model.Jobs.PageIndex;
                ViewData["TotalPages"] = Model.Jobs.TotalPages;
                ViewData["TotalCount"] = Model.Jobs.TotalCount;
                ViewData["PageSize"] = Model.Jobs.PageSize;
            }
            @if (Model.Jobs.TotalPages > 1)
            {
                <div class="card-footer bg-light">
                    <partial name="_Pagination" />
                </div>
            }
        </div>
    </div>
</div>
