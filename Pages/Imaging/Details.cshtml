@page
@model buildone.Pages.Imaging.DetailsModel
@{
    ViewData["Title"] = $"Imaging Job #{Model.Job.Id}";
}

<div class="container-fluid">
    <!-- Header -->
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb mb-2">
                    <li class="breadcrumb-item"><a asp-page="/Index">Dashboard</a></li>
                    <li class="breadcrumb-item"><a asp-page="./Queue">Job Queue</a></li>
                    <li class="breadcrumb-item active">Job #@Model.Job.Id</li>
                </ol>
            </nav>
            <h1 class="h3 mb-0">
                <i class="fas fa-desktop me-2 text-primary"></i>Imaging Job Details
            </h1>
        </div>
        <div class="d-flex gap-2">
            <a asp-page="./Queue" class="btn btn-outline-secondary">
                <i class="fas fa-arrow-left me-2"></i>Back to Queue
            </a>
            @if (Model.Job.Status == buildone.Data.Enums.JobStatus.Pending || Model.Job.Status == buildone.Data.Enums.JobStatus.Scheduled)
            {
                <button type="button" class="btn btn-success" onclick="startJob(@Model.Job.Id)">
                    <i class="fas fa-play me-2"></i>Start Job
                </button>
            }
            @if (Model.Job.Status == buildone.Data.Enums.JobStatus.InProgress)
            {
                <button type="button" class="btn btn-success" onclick="completeJob(@Model.Job.Id)">
                    <i class="fas fa-check me-2"></i>Complete Job
                </button>
            }
        </div>
    </div>

    <!-- Alert Messages -->
    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            <i class="fas fa-check-circle me-2"></i>@TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    <div class="row">
        <!-- Left Column -->
        <div class="col-lg-8">
            <!-- Job Status Card -->
            <div class="card mb-4 border-0 shadow-sm">
                <div class="card-header bg-light">
                    <h5 class="card-title mb-0">
                        <i class="fas fa-info-circle me-2"></i>Job Information
                    </h5>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label class="text-muted small">Job ID</label>
                            <div class="fw-medium">#@Model.Job.Id</div>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label class="text-muted small">Status</label>
                            <div>
                                <span class="badge bg-@Model.GetStatusColor(Model.Job.Status) fs-6">
                                    @Model.Job.Status
                                </span>
                            </div>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label class="text-muted small">Imaging Type</label>
                            <div class="fw-medium">
                                <span class="badge bg-info">@Model.Job.ImagingType</span>
                            </div>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label class="text-muted small">Image Version</label>
                            <div class="fw-medium">@(Model.Job.ImageVersion ?? "N/A")</div>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label class="text-muted small">Created Date</label>
                            <div class="fw-medium">@Model.Job.CreatedAt.ToString("MMM dd, yyyy HH:mm")</div>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label class="text-muted small">Scheduled At</label>
                            <div class="fw-medium">
                                @if (Model.Job.ScheduledAt.HasValue)
                                {
                                    @Model.Job.ScheduledAt.Value.ToString("MMM dd, yyyy HH:mm")
                                }
                                else
                                {
                                    <span class="text-muted">Not scheduled</span>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Asset Information Card -->
            <div class="card mb-4 border-0 shadow-sm">
                <div class="card-header bg-light">
                    <h5 class="card-title mb-0">
                        <i class="fas fa-laptop me-2"></i>Asset Information
                    </h5>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label class="text-muted small">Asset Tag</label>
                            <div class="fw-medium">
                                <a asp-page="/Assets/Index" class="text-decoration-none">
                                    @Model.Job.Asset.AssetTag
                                </a>
                            </div>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label class="text-muted small">PC ID</label>
                            <div class="fw-medium">@Model.Job.Asset.PcId</div>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label class="text-muted small">Brand & Model</label>
                            <div class="fw-medium">@Model.Job.Asset.Brand @Model.Job.Asset.Model</div>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label class="text-muted small">Serial Number</label>
                            <div class="fw-medium">@(Model.Job.Asset.SerialNumber ?? "N/A")</div>
                        </div>
                        @if (Model.Job.Asset.AssignedEmployee != null)
                        {
                            <div class="col-md-6 mb-3">
                                <label class="text-muted small">Assigned To</label>
                                <div class="fw-medium">
                                    <i class="fas fa-user me-2"></i>@Model.Job.Asset.AssignedEmployee.FullName
                                </div>
                            </div>
                        }
                        @if (Model.Job.Asset.Department != null)
                        {
                            <div class="col-md-6 mb-3">
                                <label class="text-muted small">Department</label>
                                <div class="fw-medium">
                                    <i class="fas fa-building me-2"></i>@Model.Job.Asset.Department.Name
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>

            <!-- Timeline Card -->
            <div class="card mb-4 border-0 shadow-sm">
                <div class="card-header bg-light">
                    <h5 class="card-title mb-0">
                        <i class="fas fa-clock me-2"></i>Timeline
                    </h5>
                </div>
                <div class="card-body">
                    <div class="timeline">
                        <div class="timeline-item">
                            <div class="timeline-marker bg-primary"></div>
                            <div class="timeline-content">
                                <h6 class="mb-1">Job Created</h6>
                                <small class="text-muted">@Model.Job.CreatedAt.ToString("MMM dd, yyyy HH:mm")</small>
                            </div>
                        </div>

                        @if (Model.Job.ScheduledAt.HasValue)
                        {
                            <div class="timeline-item">
                                <div class="timeline-marker bg-info"></div>
                                <div class="timeline-content">
                                    <h6 class="mb-1">Scheduled</h6>
                                    <small class="text-muted">@Model.Job.ScheduledAt.Value.ToString("MMM dd, yyyy HH:mm")</small>
                                </div>
                            </div>
                        }

                        @if (Model.Job.StartedAt.HasValue)
                        {
                            <div class="timeline-item">
                                <div class="timeline-marker bg-warning"></div>
                                <div class="timeline-content">
                                    <h6 class="mb-1">Job Started</h6>
                                    <small class="text-muted">@Model.Job.StartedAt.Value.ToString("MMM dd, yyyy HH:mm")</small>
                                    @if (Model.Job.Technician != null)
                                    {
                                        <div class="mt-1">
                                            <small><i class="fas fa-user-cog me-1"></i>@Model.Job.Technician.FullName</small>
                                        </div>
                                    }
                                </div>
                            </div>
                        }

                        @if (Model.Job.CompletedAt.HasValue)
                        {
                            <div class="timeline-item">
                                <div class="timeline-marker @(Model.Job.Status == buildone.Data.Enums.JobStatus.Completed ? "bg-success" : "bg-danger")"></div>
                                <div class="timeline-content">
                                    <h6 class="mb-1">@Model.Job.Status</h6>
                                    <small class="text-muted">@Model.Job.CompletedAt.Value.ToString("MMM dd, yyyy HH:mm")</small>
                                    @if (Model.Job.Duration.HasValue)
                                    {
                                        <div class="mt-1">
                                            <small><i class="fas fa-stopwatch me-1"></i>Duration: @Model.Job.Duration.Value.ToString(@"hh\:mm")</small>
                                        </div>
                                    }
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>

            <!-- Notes Card -->
            @if (!string.IsNullOrEmpty(Model.Job.Notes))
            {
                <div class="card mb-4 border-0 shadow-sm">
                    <div class="card-header bg-light">
                        <h5 class="card-title mb-0">
                            <i class="fas fa-sticky-note me-2"></i>Notes
                        </h5>
                    </div>
                    <div class="card-body">
                        <p class="mb-0">@Model.Job.Notes</p>
                    </div>
                </div>
            }
        </div>

        <!-- Right Column -->
        <div class="col-lg-4">
            <!-- Technician Card -->
            <div class="card mb-4 border-0 shadow-sm">
                <div class="card-header bg-light">
                    <h5 class="card-title mb-0">
                        <i class="fas fa-user-cog me-2"></i>Technician
                    </h5>
                </div>
                <div class="card-body">
                    @if (Model.Job.Technician != null)
                    {
                        <div class="text-center mb-3">
                            <div class="avatar-circle bg-primary text-white mx-auto mb-3" style="width: 80px; height: 80px; line-height: 80px; font-size: 32px;">
                                @Model.Job.Technician.FullName.Substring(0, 1).ToUpper()
                            </div>
                            <h5 class="mb-1">@Model.Job.Technician.FullName</h5>
                            @if (!string.IsNullOrEmpty(Model.Job.Technician.Email))
                            {
                                <p class="text-muted mb-1">
                                    <i class="fas fa-envelope me-1"></i>@Model.Job.Technician.Email
                                </p>
                            }
                            @if (!string.IsNullOrEmpty(Model.Job.Technician.Phone))
                            {
                                <p class="text-muted mb-0">
                                    <i class="fas fa-phone me-1"></i>@Model.Job.Technician.Phone
                                </p>
                            }
                        </div>
                    }
                    else
                    {
                        <div class="text-center py-4">
                            <i class="fas fa-user-slash display-4 text-muted mb-3"></i>
                            <p class="text-muted">No technician assigned</p>
                            @if (Model.Job.Status != buildone.Data.Enums.JobStatus.Completed)
                            {
                                <button type="button" class="btn btn-sm btn-primary" onclick="assignTechnician(@Model.Job.Id)">
                                    <i class="fas fa-user-plus me-2"></i>Assign Technician
                                </button>
                            }
                        </div>
                    }
                </div>
            </div>

            <!-- Quick Actions Card -->
            <div class="card mb-4 border-0 shadow-sm">
                <div class="card-header bg-light">
                    <h5 class="card-title mb-0">
                        <i class="fas fa-bolt me-2"></i>Quick Actions
                    </h5>
                </div>
                <div class="card-body">
                    <div class="d-grid gap-2">
                        @if (Model.Job.Status == buildone.Data.Enums.JobStatus.Pending)
                        {
                            <button type="button" class="btn btn-success" onclick="startJob(@Model.Job.Id)">
                                <i class="fas fa-play me-2"></i>Start Job
                            </button>
                            <button type="button" class="btn btn-outline-secondary" onclick="rescheduleJob(@Model.Job.Id)">
                                <i class="fas fa-calendar me-2"></i>Reschedule
                            </button>
                        }
                        @if (Model.Job.Status == buildone.Data.Enums.JobStatus.InProgress)
                        {
                            <button type="button" class="btn btn-success" onclick="completeJob(@Model.Job.Id)">
                                <i class="fas fa-check me-2"></i>Complete Job
                            </button>
                            <button type="button" class="btn btn-outline-danger" onclick="failJob(@Model.Job.Id)">
                                <i class="fas fa-times me-2"></i>Mark as Failed
                            </button>
                        }
                        @if (Model.Job.Status != buildone.Data.Enums.JobStatus.Completed && Model.Job.Status != buildone.Data.Enums.JobStatus.Failed)
                        {
                            <button type="button" class="btn btn-outline-warning" onclick="cancelJob(@Model.Job.Id)">
                                <i class="fas fa-ban me-2"></i>Cancel Job
                            </button>
                        }
                        <hr />
                        <a asp-page="/Assets/Index" class="btn btn-outline-primary">
                            <i class="fas fa-laptop me-2"></i>View Asset
                        </a>
                        <button type="button" class="btn btn-outline-secondary" onclick="showJobHistory(@Model.Job.Id)">
                            <i class="fas fa-history me-2"></i>View History
                        </button>
                    </div>
                </div>
            </div>

            <!-- Statistics Card -->
            @if (Model.Job.Status == buildone.Data.Enums.JobStatus.Completed || Model.Job.Status == buildone.Data.Enums.JobStatus.Failed)
            {
                <div class="card border-0 shadow-sm">
                    <div class="card-header bg-light">
                        <h5 class="card-title mb-0">
                            <i class="fas fa-chart-bar me-2"></i>Statistics
                        </h5>
                    </div>
                    <div class="card-body">
                        @if (Model.Job.Duration.HasValue)
                        {
                            <div class="d-flex justify-content-between mb-2">
                                <span class="text-muted">Total Duration</span>
                                <span class="fw-medium">@Model.Job.Duration.Value.ToString(@"hh\:mm")</span>
                            </div>
                        }
                        @if (Model.Job.StartedAt.HasValue)
                        {
                            <div class="d-flex justify-content-between mb-2">
                                <span class="text-muted">Start Time</span>
                                <span class="fw-medium">@Model.Job.StartedAt.Value.ToString("HH:mm")</span>
                            </div>
                        }
                        @if (Model.Job.CompletedAt.HasValue)
                        {
                            <div class="d-flex justify-content-between">
                                <span class="text-muted">End Time</span>
                                <span class="fw-medium">@Model.Job.CompletedAt.Value.ToString("HH:mm")</span>
                            </div>
                        }
                    </div>
                </div>
            }
        </div>
    </div>
</div>

<style>
    .avatar-circle {
        border-radius: 50%;
        display: inline-block;
        text-align: center;
    }
    
    .timeline {
        position: relative;
        padding-left: 40px;
    }
    
    .timeline::before {
        content: '';
        position: absolute;
        left: 10px;
        top: 0;
        bottom: 0;
        width: 2px;
        background: #e9ecef;
    }
    
    .timeline-item {
        position: relative;
        margin-bottom: 30px;
    }
    
    .timeline-item:last-child {
        margin-bottom: 0;
    }
    
    .timeline-marker {
        position: absolute;
        left: -34px;
        top: 0;
        width: 20px;
        height: 20px;
        border-radius: 50%;
        border: 3px solid #fff;
        box-shadow: 0 0 0 2px currentColor;
    }
    
    .timeline-content {
        padding-left: 10px;
    }
</style>

<script>
    // These functions will be called from the page
    function startJob(jobId) {
        // Redirect to Queue page with start action
        window.location.href = '/Imaging/Queue?handler=StartJob&jobId=' + jobId;
    }
    
    function completeJob(jobId) {
        // Redirect to Queue page with complete action
        window.location.href = '/Imaging/Queue?handler=CompleteJob&jobId=' + jobId;
    }
    
    function failJob(jobId) {
        if (confirm('Are you sure you want to mark this job as failed?')) {
            window.location.href = '/Imaging/Queue?handler=FailJob&jobId=' + jobId;
        }
    }
    
    function cancelJob(jobId) {
        if (confirm('Are you sure you want to cancel this job?')) {
            window.location.href = '/Imaging/Queue?handler=CancelJob&jobId=' + jobId;
        }
    }
    
    function assignTechnician(jobId) {
        window.location.href = '/Imaging/Queue?handler=AssignTechnician&jobId=' + jobId;
    }
    
    function rescheduleJob(jobId) {
        alert('Reschedule functionality coming soon!');
    }
    
    function showJobHistory(jobId) {
        alert('Job history functionality coming soon!');
    }
</script>
