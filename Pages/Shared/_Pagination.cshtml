@{
    var pageIndex = (int)ViewData["PageIndex"]!;
    var totalPages = (int)ViewData["TotalPages"]!;
    var totalCount = (int)ViewData["TotalCount"]!;
    var pageSize = (int)ViewData["PageSize"]!;
    var hasPreviousPage = pageIndex > 1;
    var hasNextPage = pageIndex < totalPages;
}

@if (totalPages > 1)
{
    <nav aria-label="Page navigation">
        <ul class="pagination justify-content-center mb-0">
            <!-- First Page -->
            <li class="page-item @(hasPreviousPage ? "" : "disabled")">
                <a class="page-link" 
                   asp-route-pageIndex="1"
                   asp-route-searchTerm="@Context.Request.Query["SearchTerm"]"
                   asp-route-statusFilter="@Context.Request.Query["StatusFilter"]"
                   asp-route-typeFilter="@Context.Request.Query["TypeFilter"]"
                   asp-route-departmentFilter="@Context.Request.Query["DepartmentFilter"]"
                   asp-route-priorityFilter="@Context.Request.Query["PriorityFilter"]"
                   asp-route-jobStatusFilter="@Context.Request.Query["JobStatusFilter"]"
                   asp-route-pageSize="@Model.PageSize">
                    <i class="fas fa-angle-double-left"></i>
                </a>
            </li>

            <!-- Previous Page -->
            <li class="page-item @(hasPreviousPage ? "" : "disabled")">
                <a class="page-link" 
                   asp-route-pageIndex="@(pageIndex - 1)"
                   asp-route-searchTerm="@Context.Request.Query["SearchTerm"]"
                   asp-route-statusFilter="@Context.Request.Query["StatusFilter"]"
                   asp-route-typeFilter="@Context.Request.Query["TypeFilter"]"
                   asp-route-departmentFilter="@Context.Request.Query["DepartmentFilter"]"
                   asp-route-priorityFilter="@Context.Request.Query["PriorityFilter"]"
                   asp-route-jobStatusFilter="@Context.Request.Query["JobStatusFilter"]"
                   asp-route-pageSize="@pageSize">
                    <i class="fas fa-angle-left"></i>
                </a>
            </li>

            <!-- Page Numbers -->
            @{
                var startPage = Math.Max(1, pageIndex - 2);
                var endPage = Math.Min(totalPages, pageIndex + 2);
                
                if (startPage > 1)
                {
                    <li class="page-item disabled">
                        <span class="page-link">...</span>
                    </li>
                }
                
                for (var i = startPage; i <= endPage; i++)
                {
                    <li class="page-item @(i == pageIndex ? "active" : "")">
                        <a class="page-link" 
                           asp-route-pageIndex="@i"
                           asp-route-searchTerm="@Context.Request.Query["SearchTerm"]"
                           asp-route-statusFilter="@Context.Request.Query["StatusFilter"]"
                           asp-route-typeFilter="@Context.Request.Query["TypeFilter"]"
                           asp-route-departmentFilter="@Context.Request.Query["DepartmentFilter"]"
                           asp-route-priorityFilter="@Context.Request.Query["PriorityFilter"]"
                           asp-route-jobStatusFilter="@Context.Request.Query["JobStatusFilter"]"
                           asp-route-pageSize="@pageSize">
                            @i
                        </a>
                    </li>
                }
                
                if (endPage < totalPages)
                {
                    <li class="page-item disabled">
                        <span class="page-link">...</span>
                    </li>
                }
            }

            <!-- Next Page -->
            <li class="page-item @(hasNextPage ? "" : "disabled")">
                <a class="page-link" 
                   asp-route-pageIndex="@(pageIndex + 1)"
                   asp-route-searchTerm="@Context.Request.Query["SearchTerm"]"
                   asp-route-statusFilter="@Context.Request.Query["StatusFilter"]"
                   asp-route-typeFilter="@Context.Request.Query["TypeFilter"]"
                   asp-route-departmentFilter="@Context.Request.Query["DepartmentFilter"]"
                   asp-route-priorityFilter="@Context.Request.Query["PriorityFilter"]"
                   asp-route-jobStatusFilter="@Context.Request.Query["JobStatusFilter"]"
                   asp-route-pageSize="@pageSize">
                    <i class="fas fa-angle-right"></i>
                </a>
            </li>

            <!-- Last Page -->
            <li class="page-item @(hasNextPage ? "" : "disabled")">
                <a class="page-link" 
                   asp-route-pageIndex="@totalPages"
                   asp-route-searchTerm="@Context.Request.Query["SearchTerm"]"
                   asp-route-statusFilter="@Context.Request.Query["StatusFilter"]"
                   asp-route-typeFilter="@Context.Request.Query["TypeFilter"]"
                   asp-route-departmentFilter="@Context.Request.Query["DepartmentFilter"]"
                   asp-route-priorityFilter="@Context.Request.Query["PriorityFilter"]"
                   asp-route-jobStatusFilter="@Context.Request.Query["JobStatusFilter"]"
                   asp-route-pageSize="@pageSize">
                    <i class="fas fa-angle-double-right"></i>
                </a>
            </li>
        </ul>
    </nav>

    <div class="text-center mt-3">
        <small class="text-muted">
            Showing @((pageIndex - 1) * pageSize + 1) to @(Math.Min(pageIndex * pageSize, totalCount)) of @totalCount entries
        </small>
        
        <!-- Page Size Selector -->
        <div class="d-inline-block ms-3">
            <select class="form-select form-select-sm d-inline-block w-auto" 
                    onchange="window.location.href = updateQueryStringParameter(window.location.href, 'pageSize', this.value)">
                @{
                    var sizes = new[] { 10, 25, 50, 100 };
                    foreach (var size in sizes)
                    {
                        <option value="@size" selected="@(pageSize == size)">@size per page</option>
                    }
                }
            </select>
        </div>
    </div>

    <script>
        function updateQueryStringParameter(uri, key, value) {
            var re = new RegExp("([?&])" + key + "=.*?(&|$)", "i");
            var separator = uri.indexOf('?') !== -1 ? "&" : "?";
            if (uri.match(re)) {
                return uri.replace(re, '$1' + key + "=" + value + '$2');
            }
            else {
                return uri + separator + key + "=" + value;
            }
        }
    </script>
}
