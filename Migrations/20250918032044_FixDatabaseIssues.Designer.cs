// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using buildone.Data;

#nullable disable

namespace buildone.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250918032044_FixDatabaseIssues")]
    partial class FixDatabaseIssues
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("buildone.Data.Asset", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AssetTag")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("AssignedEmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("Brand")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<int>("DeploymentType")
                        .HasColumnType("int");

                    b.Property<int>("ImagingType")
                        .HasColumnType("int");

                    b.Property<string>("Model")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Notes")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("PcId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SerialNumber")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("WarrantyExpiry")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AssetTag")
                        .IsUnique();

                    b.HasIndex("AssignedEmployeeId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("PcId")
                        .IsUnique();

                    b.HasIndex("SerialNumber")
                        .IsUnique()
                        .HasFilter("[SerialNumber] IS NOT NULL");

                    b.HasIndex("Status");

                    b.HasIndex("Brand", "Model");

                    b.ToTable("Assets");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AssetTag = "LAPTOP001",
                            AssignedEmployeeId = 1,
                            Brand = "Dell",
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DepartmentId = 1,
                            DeploymentType = 1,
                            ImagingType = 3,
                            Model = "Latitude 7420",
                            Notes = "Primary laptop for IT Manager",
                            PcId = "PC001",
                            SerialNumber = "DL001234",
                            Status = 5,
                            Type = "Desktop",
                            WarrantyExpiry = new DateTime(2025, 12, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            AssetTag = "LAPTOP002",
                            AssignedEmployeeId = 2,
                            Brand = "HP",
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DepartmentId = 1,
                            DeploymentType = 0,
                            ImagingType = 2,
                            Model = "EliteBook 840",
                            Notes = "Development laptop",
                            PcId = "PC002",
                            SerialNumber = "HP001234",
                            Status = 3,
                            Type = "Desktop",
                            WarrantyExpiry = new DateTime(2025, 10, 30, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            AssetTag = "DESKTOP001",
                            Brand = "Dell",
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DeploymentType = 2,
                            ImagingType = 1,
                            Model = "OptiPlex 7090",
                            Notes = "Available for assignment",
                            PcId = "PC003",
                            SerialNumber = "DL005678",
                            Status = 0,
                            Type = "Desktop",
                            WarrantyExpiry = new DateTime(2026, 3, 20, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            AssetTag = "LAPTOP003",
                            AssignedEmployeeId = 3,
                            Brand = "HP",
                            CreatedAt = new DateTime(2024, 1, 2, 0, 0, 0, 0, DateTimeKind.Utc),
                            DepartmentId = 2,
                            DeploymentType = 1,
                            ImagingType = 3,
                            Model = "ProBook 450",
                            Notes = "HR Department laptop",
                            PcId = "PC004",
                            SerialNumber = "HP005678",
                            Status = 3,
                            Type = "Desktop",
                            WarrantyExpiry = new DateTime(2025, 11, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            AssetTag = "DESKTOP002",
                            AssignedEmployeeId = 4,
                            Brand = "Dell",
                            CreatedAt = new DateTime(2024, 1, 3, 0, 0, 0, 0, DateTimeKind.Utc),
                            DepartmentId = 3,
                            DeploymentType = 0,
                            ImagingType = 2,
                            Model = "OptiPlex 5090",
                            Notes = "Finance workstation",
                            PcId = "PC005",
                            SerialNumber = "DL009876",
                            Status = 5,
                            Type = "Desktop",
                            WarrantyExpiry = new DateTime(2026, 2, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6,
                            AssetTag = "LAPTOP004",
                            Brand = "HP",
                            CreatedAt = new DateTime(2024, 1, 4, 0, 0, 0, 0, DateTimeKind.Utc),
                            DeploymentType = 2,
                            ImagingType = 1,
                            Model = "ZBook Studio",
                            Notes = "High-performance workstation for design work",
                            PcId = "PC006",
                            SerialNumber = "HP112233",
                            Status = 0,
                            Type = "Desktop",
                            WarrantyExpiry = new DateTime(2026, 4, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 7,
                            AssetTag = "TABLET001",
                            AssignedEmployeeId = 5,
                            Brand = "Dell",
                            CreatedAt = new DateTime(2024, 1, 5, 0, 0, 0, 0, DateTimeKind.Utc),
                            DepartmentId = 2,
                            DeploymentType = 1,
                            ImagingType = 3,
                            Model = "Latitude 7320 Detachable",
                            Notes = "Mobile device for presentations",
                            PcId = "PC007",
                            SerialNumber = "DL445566",
                            Status = 3,
                            Type = "Desktop",
                            WarrantyExpiry = new DateTime(2025, 9, 25, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 8,
                            AssetTag = "DESKTOP003",
                            Brand = "HP",
                            CreatedAt = new DateTime(2024, 1, 6, 0, 0, 0, 0, DateTimeKind.Utc),
                            DeploymentType = 0,
                            ImagingType = 2,
                            Model = "EliteDesk 800",
                            Notes = "Undergoing hardware upgrade",
                            PcId = "PC008",
                            SerialNumber = "HP778899",
                            Status = 6,
                            Type = "Desktop",
                            WarrantyExpiry = new DateTime(2024, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 9,
                            AssetTag = "LAPTOP005",
                            Brand = "Dell",
                            CreatedAt = new DateTime(2024, 1, 7, 0, 0, 0, 0, DateTimeKind.Utc),
                            DeploymentType = 2,
                            ImagingType = 1,
                            Model = "Inspiron 7510",
                            Notes = "Budget laptop for temporary assignments",
                            PcId = "PC009",
                            SerialNumber = "DL334455",
                            Status = 0,
                            Type = "Desktop",
                            WarrantyExpiry = new DateTime(2025, 8, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 10,
                            AssetTag = "WORKSTATION001",
                            Brand = "HP",
                            CreatedAt = new DateTime(2023, 6, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DeploymentType = 1,
                            ImagingType = 3,
                            Model = "Z4 G4",
                            Notes = "End of life - scheduled for disposal",
                            PcId = "PC010",
                            SerialNumber = "HP990011",
                            Status = 8,
                            Type = "Desktop",
                            WarrantyExpiry = new DateTime(2024, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("buildone.Data.AssetHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("ActorId")
                        .HasColumnType("int");

                    b.Property<int>("AssetId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("FromValue")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Notes")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("ToValue")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.HasIndex("Action");

                    b.HasIndex("ActorId");

                    b.HasIndex("AssetId");

                    b.HasIndex("CreatedAt");

                    b.ToTable("AssetHistory");
                });

            modelBuilder.Entity("buildone.Data.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique()
                        .HasFilter("[Code] IS NOT NULL");

                    b.HasIndex("Name");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "IT",
                            Name = "Information Technology"
                        },
                        new
                        {
                            Id = 2,
                            Code = "HR",
                            Name = "Human Resources"
                        },
                        new
                        {
                            Id = 3,
                            Code = "FIN",
                            Name = "Finance"
                        });
                });

            modelBuilder.Entity("buildone.Data.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasFilter("[Email] IS NOT NULL");

                    b.HasIndex("FullName");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DepartmentId = 1,
                            Email = "alice.wilson@company.com",
                            FullName = "Alice Wilson",
                            Phone = "555-0101",
                            Username = "awilson"
                        },
                        new
                        {
                            Id = 2,
                            DepartmentId = 1,
                            Email = "david.brown@company.com",
                            FullName = "David Brown",
                            Phone = "555-0102",
                            Username = "dbrown"
                        },
                        new
                        {
                            Id = 3,
                            DepartmentId = 2,
                            Email = "sarah.davis@company.com",
                            FullName = "Sarah Davis",
                            Phone = "555-0103",
                            Username = "sdavis"
                        },
                        new
                        {
                            Id = 4,
                            DepartmentId = 3,
                            Email = "michael.johnson@company.com",
                            FullName = "Michael Johnson",
                            Phone = "555-0104",
                            Username = "mjohnson"
                        },
                        new
                        {
                            Id = 5,
                            DepartmentId = 2,
                            Email = "jennifer.lee@company.com",
                            FullName = "Jennifer Lee",
                            Phone = "555-0105",
                            Username = "jlee"
                        });
                });

            modelBuilder.Entity("buildone.Data.ImagingJob", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AssetId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CompletedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("ImageVersion")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ImagingType")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime?>("ScheduledAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("StartedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("TechnicianId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ImagingType");

                    b.HasIndex("ScheduledAt");

                    b.HasIndex("Status");

                    b.HasIndex("TechnicianId");

                    b.HasIndex("AssetId", "Status");

                    b.ToTable("ImagingJobs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AssetId = 1,
                            CompletedAt = new DateTime(2024, 1, 2, 11, 30, 0, 0, DateTimeKind.Utc),
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            ImageVersion = "Windows11-2024.1",
                            ImagingType = 3,
                            Notes = "Successfully imaged with standard corporate image",
                            ScheduledAt = new DateTime(2024, 1, 2, 9, 0, 0, 0, DateTimeKind.Utc),
                            StartedAt = new DateTime(2024, 1, 2, 9, 15, 0, 0, DateTimeKind.Utc),
                            Status = 3,
                            TechnicianId = 1
                        },
                        new
                        {
                            Id = 2,
                            AssetId = 2,
                            CreatedAt = new DateTime(2024, 1, 2, 0, 0, 0, 0, DateTimeKind.Utc),
                            ImageVersion = "DevEnvironment-2024.1",
                            ImagingType = 2,
                            Notes = "Installing development tools and environment",
                            ScheduledAt = new DateTime(2024, 1, 3, 10, 0, 0, 0, DateTimeKind.Utc),
                            StartedAt = new DateTime(2024, 1, 3, 10, 5, 0, 0, DateTimeKind.Utc),
                            Status = 2,
                            TechnicianId = 2
                        },
                        new
                        {
                            Id = 3,
                            AssetId = 3,
                            CreatedAt = new DateTime(2024, 1, 3, 0, 0, 0, 0, DateTimeKind.Utc),
                            ImageVersion = "Windows11-2024.1",
                            ImagingType = 1,
                            Notes = "Waiting for hardware preparation",
                            ScheduledAt = new DateTime(2024, 1, 5, 14, 0, 0, 0, DateTimeKind.Utc),
                            Status = 1
                        },
                        new
                        {
                            Id = 4,
                            AssetId = 4,
                            CompletedAt = new DateTime(2024, 1, 8, 10, 45, 0, 0, DateTimeKind.Utc),
                            CreatedAt = new DateTime(2024, 1, 7, 0, 0, 0, 0, DateTimeKind.Utc),
                            ImageVersion = "HROffice-2024.1",
                            ImagingType = 3,
                            Notes = "HR suite with specialized applications",
                            ScheduledAt = new DateTime(2024, 1, 8, 8, 0, 0, 0, DateTimeKind.Utc),
                            StartedAt = new DateTime(2024, 1, 8, 8, 10, 0, 0, DateTimeKind.Utc),
                            Status = 3,
                            TechnicianId = 1
                        },
                        new
                        {
                            Id = 5,
                            AssetId = 5,
                            CompletedAt = new DateTime(2024, 1, 10, 12, 30, 0, 0, DateTimeKind.Utc),
                            CreatedAt = new DateTime(2024, 1, 9, 0, 0, 0, 0, DateTimeKind.Utc),
                            ImageVersion = "FinanceSecure-2024.1",
                            ImagingType = 2,
                            Notes = "Financial software with enhanced security",
                            ScheduledAt = new DateTime(2024, 1, 10, 9, 0, 0, 0, DateTimeKind.Utc),
                            StartedAt = new DateTime(2024, 1, 10, 9, 5, 0, 0, DateTimeKind.Utc),
                            Status = 3,
                            TechnicianId = 2
                        },
                        new
                        {
                            Id = 6,
                            AssetId = 6,
                            CreatedAt = new DateTime(2024, 1, 12, 0, 0, 0, 0, DateTimeKind.Utc),
                            ImageVersion = "Workstation-2024.1",
                            ImagingType = 1,
                            Notes = "High-performance image with CAD software",
                            ScheduledAt = new DateTime(2024, 1, 15, 13, 0, 0, 0, DateTimeKind.Utc),
                            Status = 0,
                            TechnicianId = 1
                        },
                        new
                        {
                            Id = 7,
                            AssetId = 8,
                            CompletedAt = new DateTime(2024, 1, 12, 11, 45, 0, 0, DateTimeKind.Utc),
                            CreatedAt = new DateTime(2024, 1, 11, 0, 0, 0, 0, DateTimeKind.Utc),
                            ImageVersion = "Windows11-2024.1",
                            ImagingType = 2,
                            Notes = "Hardware failure detected during imaging",
                            ScheduledAt = new DateTime(2024, 1, 12, 11, 0, 0, 0, DateTimeKind.Utc),
                            StartedAt = new DateTime(2024, 1, 12, 11, 10, 0, 0, DateTimeKind.Utc),
                            Status = 4,
                            TechnicianId = 2
                        },
                        new
                        {
                            Id = 8,
                            AssetId = 9,
                            CreatedAt = new DateTime(2024, 1, 16, 0, 0, 0, 0, DateTimeKind.Utc),
                            ImageVersion = "BasicOffice-2024.1",
                            ImagingType = 1,
                            Notes = "Cancelled due to change in requirements",
                            ScheduledAt = new DateTime(2024, 1, 18, 14, 0, 0, 0, DateTimeKind.Utc),
                            Status = 5,
                            TechnicianId = 1
                        });
                });

            modelBuilder.Entity("buildone.Data.Asset", b =>
                {
                    b.HasOne("buildone.Data.Employee", "AssignedEmployee")
                        .WithMany("Assets")
                        .HasForeignKey("AssignedEmployeeId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("buildone.Data.Department", "Department")
                        .WithMany("Assets")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("AssignedEmployee");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("buildone.Data.AssetHistory", b =>
                {
                    b.HasOne("buildone.Data.Employee", "Actor")
                        .WithMany("AssetHistoryEntries")
                        .HasForeignKey("ActorId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("buildone.Data.Asset", "Asset")
                        .WithMany("History")
                        .HasForeignKey("AssetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Actor");

                    b.Navigation("Asset");
                });

            modelBuilder.Entity("buildone.Data.Employee", b =>
                {
                    b.HasOne("buildone.Data.Department", "Department")
                        .WithMany("Employees")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Department");
                });

            modelBuilder.Entity("buildone.Data.ImagingJob", b =>
                {
                    b.HasOne("buildone.Data.Asset", "Asset")
                        .WithMany("ImagingJobs")
                        .HasForeignKey("AssetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("buildone.Data.Employee", "Technician")
                        .WithMany("ImagingJobs")
                        .HasForeignKey("TechnicianId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Asset");

                    b.Navigation("Technician");
                });

            modelBuilder.Entity("buildone.Data.Asset", b =>
                {
                    b.Navigation("History");

                    b.Navigation("ImagingJobs");
                });

            modelBuilder.Entity("buildone.Data.Department", b =>
                {
                    b.Navigation("Assets");

                    b.Navigation("Employees");
                });

            modelBuilder.Entity("buildone.Data.Employee", b =>
                {
                    b.Navigation("AssetHistoryEntries");

                    b.Navigation("Assets");

                    b.Navigation("ImagingJobs");
                });
#pragma warning restore 612, 618
        }
    }
}
